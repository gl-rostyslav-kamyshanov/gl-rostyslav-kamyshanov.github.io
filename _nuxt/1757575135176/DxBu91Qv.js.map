{"version":3,"mappings":"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","names":["videoPlayerRef","ref","playerState","computed","mockEvent","streamUrl","appliedVastUrl","adsConfig","playerKey","applyStreamUrl","useHead","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_ClientOnly","_createBlock","_Suspense","_cache","_component_LazyEventPlayer","_unref","_hoisted_4","_hoisted_5","$event","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_toDisplayString","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37"],"ignoreList":[],"sources":["../../../../app/pages/dev-ad-test.vue"],"sourcesContent":["<!--\n  TEMPORARY DEV PAGE - PXA2 ONLY\n  Simple player test with hardcoded stream - POC\n-->\n<script setup lang=\"ts\">\nimport type { EventPlayer } from \"#components\";\nimport type { IPlayerState } from \"@pixellot/vue-player\";\n\n// const runtimeConfig = useRuntimeConfig().public;\n\n// if (!runtimeConfig.APP_FLAGS.enableAdMonitoring) {\n//   throw createError({\n//     statusCode: 404,\n//     statusMessage: \"Page Not Found\",\n//   });\n// }\n\nconst videoPlayerRef = ref<InstanceType<typeof EventPlayer> | null>(null);\nconst playerState = computed<IPlayerState | null>(() =>\n  videoPlayerRef.value ? videoPlayerRef.value.state : null,\n);\n\nconst mockEvent = ref({\n  id: \"test-event-123\",\n  title: \"Test Stream - Dev Only\",\n  referenceId: \"test-ref-123\",\n  date: new Date(),\n  gameStartDate: new Date(),\n  sportType: \"test\",\n  eventType: \"test\",\n  type: \"test\",\n  gameType: \"test\",\n  commerceType: null,\n  isExternal: false,\n  isEnabledVidswapStats: false,\n  categories: [],\n  source: {\n    hd: \"https://d13q7lsn6j55gt.cloudfront.net/Pixellot/68a6f4ee64ee555bf59799c8/cloud_hls/0_hd_hls.m3u8\",\n  },\n  eventStatus: \"LIVE\" as const,\n  isEventAvailableForUser: true,\n  isEventAvailableInUserRegion: true,\n  commerceCoverage: null,\n} as unknown as IModelEvent);\n\n// Stream source input\nconst streamUrl = ref(mockEvent.value.source.hd);\n\n// VAST URL input\n\n// Applied VAST URL (only updates when user clicks apply)\nconst appliedVastUrl = ref(\"\");\n\n// Ads configuration\nconst adsConfig = computed(() => ({\n  enableManifestMonitoring: true,\n  enableTimelineAdvancement: true,\n\n  // Multiple ad sources for sequential variety in testing\n  testAdSources: [\n    \"https://gov.aniview.com/api/adserver/vast3/?AV_PUBLISHERID=5d53c40328a0612a9c2b9afd&AV_CHANNELID=5dc3f38728a0616a7d3cac85&AV_URL=[URL_MACRO]&cb=[TIMESTAMP_MACRO]&AV_WIDTH=[WIDTH_MACRO]&AV_HEIGHT=[HEIGHT_MACRO]\",\n    \"https://pubads.g.doubleclick.net/gampad/ads?iu=/21775744923/external/single_ad_samples&sz=640x480&cust_params=sample_ct%3Dlinear&ciu_szs=300x250%2C728x90&gdfp_req=1&output=vast&unviewed_position_start=1&env=vp&correlator=\",\n    \"https://basil79.github.io/vast-sample-tags/pg/vast.xml\",\n  ],\n}));\n\n// Player key to force remount when ads config changes\nconst playerKey = computed(() => `player-${appliedVastUrl.value.slice(-10)}-${adsConfig.value.enableManifestMonitoring}-${adsConfig.value.enableTimelineAdvancement}`);\n\n// Apply new stream URL\nconst applyStreamUrl = () => {\n  mockEvent.value.source.hd = streamUrl.value;\n};\n\nuseHead({\n  title: \"Dev Player Ad Monitoring Testing\",\n  meta: [\n    { name: \"robots\", content: \"noindex, nofollow\" },\n  ],\n});\n\ndefinePageMeta({\n  layout: \"home\",\n});\n</script>\n\n<template>\n  <div class=\"main-container\">\n    <div class=\"flex flex-col lg:flex-row mb-10 lg:gap-6\">\n      <div class=\"w-2/3\">\n        <ClientOnly>\n          <Suspense>\n            <template #fallback>\n              <div class=\"skeletonLoading aspect-video\" />\n            </template>\n            <LazyEventPlayer\n              :key=\"playerKey\"\n              ref=\"videoPlayerRef\"\n              :event=\"mockEvent\"\n              :ads-config=\"adsConfig\"\n            />\n          </Suspense>\n          <div id=\"player-bottom\" />\n        </ClientOnly>\n\n        <!-- Stream Source Controls -->\n        <div class=\"my-6 flex flex-col gap-2\">\n          <h2 class=\"text-lg font-extrabold text-main\">\n            Stream Configuration\n          </h2>\n          <div class=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4 space-y-4\">\n            <div>\n              <label for=\"stream-url\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Stream URL (HLS)\n              </label>\n              <input\n                id=\"stream-url\"\n                v-model=\"streamUrl\"\n                type=\"url\"\n                class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm\n                       focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white text-sm\"\n                placeholder=\"Enter HLS stream URL...\"\n              >\n            </div>\n            <div class=\"flex gap-2\">\n              <button\n                class=\"px-3 py-1 text-xs bg-green-500 text-white rounded hover:bg-green-600 transition-colors\"\n                @click=\"applyStreamUrl\"\n              >\n                Apply Stream\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"w-1/3\">\n        <div class=\"my-6 flex flex-col gap-2 text-main\">\n          <h2 class=\"text-lg font-extrabold\">\n            Player State\n          </h2>\n          <div v-if=\"playerState\" class=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4 space-y-3\">\n            <!-- Status Indicators -->\n            <div class=\"grid grid-cols-2 gap-2\">\n              <div class=\"flex items-center gap-2\">\n                <div\n                  class=\"w-3 h-3 rounded-full\" :class=\"[\n                    playerState.playing ? 'bg-green-500' : 'bg-gray-400',\n                  ]\"\n                />\n                <span class=\"text-sm font-medium\">Playing</span>\n              </div>\n              <div class=\"flex items-center gap-2\">\n                <div\n                  class=\"w-3 h-3 rounded-full\" :class=\"[\n                    playerState.isLive ? 'bg-red-500' : 'bg-gray-400',\n                  ]\"\n                />\n                <span class=\"text-sm font-medium\">Live</span>\n              </div>\n              <div class=\"flex items-center gap-2\">\n                <div\n                  class=\"w-3 h-3 rounded-full\" :class=\"[\n                    playerState.muted ? 'bg-orange-500' : 'bg-gray-400',\n                  ]\"\n                />\n                <span class=\"text-sm font-medium\">Muted</span>\n              </div>\n              <div class=\"flex items-center gap-2\">\n                <div\n                  class=\"w-3 h-3 rounded-full\" :class=\"[\n                    playerState.waiting ? 'bg-yellow-500' : 'bg-gray-400',\n                  ]\"\n                />\n                <span class=\"text-sm font-medium\">Waiting</span>\n              </div>\n            </div>\n\n            <!-- Time Information -->\n            <div class=\"space-y-2\">\n              <h3 class=\"text-sm font-semibold text-gray-700 dark:text-gray-300\">\n                Time Info\n              </h3>\n              <div class=\"grid grid-cols-1 gap-1 text-sm\">\n                <div class=\"flex justify-between\">\n                  <span>Current Time:</span>\n                  <span class=\"font-mono\">{{ playerState.currentTime.toFixed(2) }}</span>\n                </div>\n                <div class=\"flex justify-between\">\n                  <span>Duration:</span>\n                  <span class=\"font-mono\">{{ playerState.duration }}</span>\n                </div>\n              </div>\n            </div>\n\n            <!-- Audio Information -->\n            <div class=\"space-y-2\">\n              <h3 class=\"text-sm font-semibold text-gray-700 dark:text-gray-300\">\n                Audio\n              </h3>\n              <div class=\"flex justify-between text-sm\">\n                <span>Volume:</span>\n                <span class=\"font-mono\">{{ Math.round(playerState.volume * 100) }}%</span>\n              </div>\n            </div>\n\n            <!-- Technical Information -->\n            <div class=\"space-y-2\">\n              <h3 class=\"text-sm font-semibold text-gray-700 dark:text-gray-300\">\n                Technical\n              </h3>\n              <div class=\"grid grid-cols-1 gap-1 text-sm\">\n                <div class=\"flex justify-between\">\n                  <span>Ready State:</span>\n                  <span class=\"font-mono\">{{ playerState.readyState }}</span>\n                </div>\n                <div class=\"flex justify-between\">\n                  <span>Network State:</span>\n                  <span class=\"font-mono\">{{ playerState.networkState }}</span>\n                </div>\n                <div class=\"flex justify-between\">\n                  <span>Has Started:</span>\n                  <span class=\"font-mono\">{{ playerState.hasStarted ? 'Yes' : 'No' }}</span>\n                </div>\n                <div class=\"flex justify-between\">\n                  <span>User Active:</span>\n                  <span class=\"font-mono\">{{ playerState.userActive ? 'Yes' : 'No' }}</span>\n                </div>\n              </div>\n            </div>\n\n            <!-- Error State -->\n            <div v-if=\"playerState.error\" class=\"space-y-2\">\n              <h3 class=\"text-sm font-semibold text-red-600 dark:text-red-400\">\n                Error\n              </h3>\n              <pre class=\"text-xs bg-red-50 dark:bg-red-900/20 p-2 rounded text-red-700 dark:text-red-300\">{{ playerState.error }}</pre>\n            </div>\n\n            <!-- Raw JSON (Collapsible) -->\n            <details class=\"mt-4\">\n              <summary class=\"cursor-pointer text-sm font-semibold text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100\">\n                Raw JSON Data\n              </summary>\n              <pre class=\"mt-2 p-3 bg-gray-100 dark:bg-gray-900 rounded text-xs overflow-auto max-h-40 text-gray-800 dark:text-gray-200\">\n{{ JSON.stringify(playerState, null, 2) }}\n</pre>\n            </details>\n          </div>\n          <div v-else class=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4 text-center text-gray-500\">\n            No player state available\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n"],"file":"_nuxt/1757575135176/DxBu91Qv.js"}