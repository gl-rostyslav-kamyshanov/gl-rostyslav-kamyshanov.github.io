{"version":3,"file":"C6D2HhwN.js","sources":["../../../../app/composables/use-follow.ts"],"sourcesContent":["import FollowAPI from \"~/services/follow\";\nimport useUserStore from \"~/stores/user\";\nimport getErrorLocalePathMessage from \"~/utils/locale\";\n\nexport default function useFollow(options: { id: string; type: TFollowType }) {\n  const toaster = useToast();\n  const { t, te } = useI18n();\n  const userStore = useUserStore();\n  const loading = ref(false);\n  const isFollowing = computed(() => Boolean(userStore.followed[(options.id)]));\n  const onError = (error: Error) => {\n    const { message } = getErrorLocalePathMessage(error.message, { t, te });\n    return toaster.error(message);\n  };\n\n  async function toggleFollow(item: TFollowItemType) {\n    loading.value = true;\n\n    if (isFollowing.value)\n      await FollowAPI.unfollow({ item, type: options.type }).catch(onError);\n    else\n      await FollowAPI.follow({ item, type: options.type }).catch(onError);\n\n    loading.value = false;\n  }\n\n  return { isFollowing, loading, toggleFollow };\n}\n"],"names":["useFollow","options","toaster","useToast","t","te","useI18n","userStore","useUserStore","loading","ref","isFollowing","computed","onError","error","message","getErrorLocalePathMessage","toggleFollow","item","FollowAPI"],"mappings":"6EAIA,SAAwBA,EAAUC,EAA4C,CAC5E,MAAMC,EAAUC,EAAA,EACV,CAAE,EAAAC,EAAG,GAAAC,CAAA,EAAOC,EAAA,EACZC,EAAYC,EAAA,EACZC,EAAUC,EAAI,EAAK,EACnBC,EAAcC,EAAS,IAAM,EAAQL,EAAU,SAAUN,EAAQ,EAAG,CAAE,EACtEY,EAAWC,GAAiB,CAChC,KAAM,CAAE,QAAAC,GAAYC,EAA0BF,EAAM,QAAS,CAAE,EAAAV,EAAG,GAAAC,EAAI,EACtE,OAAOH,EAAQ,MAAMa,CAAO,CAC9B,EAEA,eAAeE,EAAaC,EAAuB,CACjDT,EAAQ,MAAQ,GAEZE,EAAY,MACd,MAAMQ,EAAU,SAAS,CAAE,KAAAD,EAAM,KAAMjB,EAAQ,IAAA,CAAM,EAAE,MAAMY,CAAO,EAEpE,MAAMM,EAAU,OAAO,CAAE,KAAAD,EAAM,KAAMjB,EAAQ,IAAA,CAAM,EAAE,MAAMY,CAAO,EAEpEJ,EAAQ,MAAQ,EAClB,CAEA,MAAO,CAAE,YAAAE,EAAa,QAAAF,EAAS,aAAAQ,CAAA,CACjC"}