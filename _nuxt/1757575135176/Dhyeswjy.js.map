{"version":3,"file":"Dhyeswjy.js","sources":["../../../../app/services/format/range.ts","../../../../app/services/format/search.ts","../../../../app/services/format/teams.ts","../../../../app/services/search.ts"],"sourcesContent":["import { DATE_RANGE } from \"~/constants\";\n\nexport const formatEventDateRange = (dateRange?: TDateRange): number | undefined => {\n  if (!dateRange || dateRange === DATE_RANGE.ANYTIME)\n    return undefined;\n  else if (dateRange === DATE_RANGE.TODAY)\n    return 0;\n  else if (dateRange === DATE_RANGE.YESTERDAY)\n    return -1;\n  else if (dateRange === DATE_RANGE.PAST_7_DAYS)\n    return -7;\n  else if (dateRange === DATE_RANGE.PAST_30_DAYS)\n    return -30;\n  else if (dateRange === DATE_RANGE.PAST_90_DAYS)\n    return -90;\n};\n","import { EVENT_TYPE } from \"~/constants\";\nimport { formatEventDateRange } from \"./index\";\n\nexport const formatSearchRequestOptions = (item: IModelSearchOptions): IRequestSearchPayloads => {\n  const status = item.type !== EVENT_TYPE.HIGHLIGHT ? item.type : undefined;\n  const mediaType = item.type === EVENT_TYPE.HIGHLIGHT ? item.type : undefined;\n  const sportType = (Array.isArray(item.sportType) && item.sportType?.join(\",\")) || undefined;\n  const dateOffset = formatEventDateRange(item.dateRange);\n  const identityId = item.identityId === \"all\" ? undefined : item.identityId;\n  const gender = item.gender === \"all\" ? undefined : item.gender;\n\n  const payload: IRequestSearchPayloads = {\n    searchString: item.searchString || undefined,\n    sportType,\n    identityId,\n    gender,\n    status,\n    mediaType,\n    dateOffset,\n    size: item.size || 12,\n    page: item.page || 0,\n    order: item.order,\n    sort: item.sort,\n  };\n\n  if (item.type === EVENT_TYPE.HIGHLIGHT) {\n    payload.eventFilters = {\n      \"identities.type\": identityId,\n      \"gender\": gender,\n    };\n    payload.identityId = undefined;\n  }\n\n  return payload;\n};\n\nexport const formatCategorySearchRequestOptions = (item: IModelCategorySearchOptions): IRequestCategorySearchPayloads => {\n  const sportType = (Array.isArray(item.sportType) && item.sportType?.join(\",\")) || undefined;\n  const dateOffset = formatEventDateRange(item.dateOffset);\n  const identityId = item.identityId === \"all\" ? undefined : item.identityId;\n\n  return {\n    searchString: item.searchString || undefined,\n    sportType,\n    identityId,\n    dateOffset,\n    order: item.order,\n    sort: item.sort,\n  };\n};\n\nexport const formatIdentitySubFacetsForMain = (item: IResponseIdentities): IModelIdentitySubFacetsForMain => {\n  const relatedIdentities = (item.relatedIdentities ?? []).map((item) => {\n    return {\n      id: item._id || \"\",\n      title: item.title || \"\",\n      imageUrl: item.content?.PosterH || \"\",\n    };\n  });\n\n  return {\n    identityId: item.identityId,\n    count: item.count,\n    identityTitle: item.identityTitle,\n    relatedIdentities,\n  };\n};\n","import { formatBanner } from \"./identity\";\n\nexport const formatTeam = (data: IResponseTeam): IModelIdentityItem => {\n  const runtimeConfig = useRuntimeConfig().public;\n  const isEnableTeamShortName = runtimeConfig.APP_CUSTOMER.enable_teams_short_name;\n  const title = isEnableTeamShortName && data.shortTitle ? data.shortTitle : data.title;\n\n  const banners = data.content?.PosterF?.map(formatBanner) || [];\n  const mobileBanners = data.content?.MobilePosterF?.map(formatBanner) || [];\n\n  const logoUrl = data.content?.PosterH?.[0]?.url || \"\";\n\n  return {\n    id: data._id,\n    referenceId: data.referenceId,\n    title,\n    imageUrl: data.logo,\n    bannerUrl: data.banner,\n    identityIds: data.identities?.map(i => i.type) || [],\n    facebookUrl: data.socialMediasLinks?.facebook,\n    instagramUrl: data.socialMediasLinks?.instagram,\n    xUrl: data.socialMediasLinks?.twitter,\n    webUrl: data.socialMediasLinks?.web,\n    banners,\n    mobileBanners,\n    logoUrl,\n  };\n};\n\nexport const formatTeamWithLeagueSearch = (data: IResponseLeagueWithTeamsSearch): IModelIdentityWithIdentityItemsSearch => {\n  const identityItems = data.teams.map((item) => {\n    const runtimeConfig = useRuntimeConfig().public;\n    const isEnableTeamShortName = runtimeConfig.APP_CUSTOMER.enable_teams_short_name;\n    const title = isEnableTeamShortName && item.shortTitle ? item.shortTitle : item.title;\n\n    return {\n      id: item._id,\n      title,\n      imageUrl: item.logo,\n    };\n  });\n  return {\n    identityId: data._id,\n    title: data.title,\n    identityItems,\n  };\n};\n","import useRequest from \"~/composables/use-request\";\nimport { EVENT_TYPE, ORDER, SORT } from \"~/constants\";\nimport Event from \"./events/event.model\";\nimport {\n  formatCategorySearchRequestOptions,\n  formatIdentity,\n  formatIdentityItem,\n  formatIdentitySubFacetsForMain,\n  formatPaginatedResponseItems,\n  formatRequestOptions,\n  formatSearchRequestOptions,\n  formatTeam,\n  formatTeamWithLeagueSearch,\n  returnPaginatedResponse,\n} from \"./format\";\nimport HeaderAPI from \"./header\";\n\nconst SearchAPI = {\n  eventSearch(options: IModelSearchOptions): Promise<IPaginatedResponse<IModelEvent>> {\n    const { request } = useRequest();\n    const params = formatSearchRequestOptions(options);\n\n    if (options.type === EVENT_TYPE.HIGHLIGHT) {\n      return request\n        .post<IPaginatedResponse<IResponseEvent>>(\"/api/clip/list\", { body: params })\n        .then(response => Event.formatPaginated(response, Event.formatMediaEvent));\n    }\n\n    return request\n      .post<IPaginatedResponse<IResponseEvent>>(\"/api/event/search\", { body: params })\n      .then(response => Event.formatPaginated(response, Event.format));\n  },\n\n  /**\n   * @deprecated use `identitySubFacetsForMain` instead\n   */\n  async categoryWithSubcategorySearch(options: IModelCategorySearchOptions): Promise<IModelIdentityWithIdentityItemsSearch[]> {\n    const { request } = useRequest();\n    const appConfig = useRuntimeConfig().public;\n    const cachedCategory = useSessionStorage<IHeaderLink[]>(`${appConfig.APP_CUSTOMER.name_short}-links`, []);\n\n    if (!(cachedCategory.value && cachedCategory.value.length))\n      await HeaderAPI.load(); // Check if category is already exists on session storage\n\n    const params = formatCategorySearchRequestOptions(options);\n\n    return request\n      .post<IPaginatedResponse<IResponseCategorySearch>>(\"/api/identity/search\", { body: params })\n      .then((response) => {\n        const categoryResults = response.content.entries.reduce((acc: IModelIdentityWithIdentityItemsSearch[], cur) => {\n          const identityId = cur.mainIdentityId;\n          const title = cachedCategory.value.find(c => c.id === identityId)?.title;\n          if (!title)\n            return acc;\n          const item = { identityId, title, identityItems: cur.identityItems.map(formatIdentityItem) };\n          return [...acc, item];\n        }, []);\n\n        return categoryResults;\n      });\n  },\n\n  /**\n   * @deprecated\n   */\n  categoryWithSubcategorySearchById(options: IModelCategorySearchOptionsWithIdentity): Promise<any> {\n    return SearchAPI.categoryWithSubcategorySearch(options).then((response) => {\n      if (response.length === 0)\n        return Promise.resolve(returnPaginatedResponse([]));\n\n      return returnPaginatedResponse(response[0].identityItems);\n    });\n  },\n\n  /**\n   * @deprecated use `identitySearch` instead\n   */\n  categorySearch(options: IRequestPaginatedOptions & { searchString?: string }): Promise<IPaginatedResponse<IModelIdentity>> {\n    const { request } = useRequest();\n    const generalParams = formatRequestOptions(options);\n    const params = { ...generalParams, type: \"identity\", archived: options?.archived, searchString: options?.searchString };\n\n    return request\n      .post<IPaginatedResponse<IResponseIdentity>>(\"/api/identity/category_search\", { body: params })\n      .then(response => formatPaginatedResponseItems(response, formatIdentity));\n  },\n\n  identitySubFacetsForMain(options: IRequestCategorySearchWithSubcategoryOptions): Promise<IModelIdentitySubFacetsForMain[]> {\n    const { request } = useRequest();\n\n    const defaultOptions = {\n      fields: \"id,title,content\",\n      subsPerMainLimit: 10,\n    };\n\n    const params = Object.assign({}, defaultOptions, options);\n\n    return request\n      .get<IContentArrayResponse<IResponseIdentities>>(\"/api/identity/sub_facets_for_main\", { query: params })\n      .then(response => response.content.map(formatIdentitySubFacetsForMain));\n  },\n\n  identityItemSearch(\n    options: IRequestPaginatedOptions & { searchString: string; identityId: string },\n  ): Promise<IPaginatedResponse<IModelIdentityItem>> {\n    const { request } = useRequest();\n    const generalParams = formatRequestOptions(options);\n\n    const defaultOptions = {\n      ...generalParams,\n      type: \"identity_item\",\n      searchString: options.searchString,\n      identityId: options.identityId,\n    };\n\n    return request.post<IPaginatedResponse<IResponseIdentity>>(\"/api/identity/advanced_search\", { body: defaultOptions })\n      .then(response => formatPaginatedResponseItems(response, formatIdentityItem));\n  },\n\n  identitySearch(\n    options: IRequestPaginatedOptions & { searchString: string },\n  ) {\n    const { request } = useRequest();\n    const generalParams = formatRequestOptions(options);\n\n    const defaultOptions = {\n      ...generalParams,\n      type: \"identity\",\n      searchString: options.searchString,\n      archived: options?.archived,\n    };\n\n    return request.post<IPaginatedResponse<IResponseIdentity>>(\"/api/identity/advanced_search\", { body: defaultOptions })\n      .then(response => formatPaginatedResponseItems(response, formatIdentity));\n  },\n\n  teamSearch(options: IRequestPaginatedOptions & { title?: string; identityId?: string }) {\n    const { request } = useRequest();\n    const generalParams = formatRequestOptions(options);\n\n    const defaultOptions = {\n      ...generalParams,\n      type: \"team\",\n      searchString: options.title,\n      identityId: options.identityId,\n    };\n\n    return request\n      .get<IPaginatedResponse<IResponseTeam>>(\"/api/team/search\", { query: defaultOptions })\n      .then(response => formatPaginatedResponseItems(response, formatTeam));\n  },\n\n  leagueWithTeamsSearch(options: IRequestSearchLeagueWithTeamsOptions) {\n    const { request } = useRequest();\n    const defaultParams = {\n      sortIdentity: SORT.order,\n      orderIdentity: ORDER.asc,\n      sortTeam: SORT.title,\n      orderTeam: ORDER.asc,\n    };\n\n    const defaultOptions = Object.assign({}, defaultParams, options);\n\n    return request\n      .post<IContentResponse<IResponseLeagueWithTeamsSearch[]>>(\"/api/follow/team_list\", { body: defaultOptions })\n      .then(response => response.content.map(formatTeamWithLeagueSearch));\n  },\n};\n\nexport default SearchAPI;\n"],"names":["formatEventDateRange","dateRange","DATE_RANGE","formatSearchRequestOptions","item","status","EVENT_TYPE","mediaType","sportType","dateOffset","identityId","gender","payload","formatCategorySearchRequestOptions","formatIdentitySubFacetsForMain","relatedIdentities","formatTeam","data","title","useRuntimeConfig","banners","formatBanner","mobileBanners","logoUrl","formatTeamWithLeagueSearch","identityItems","SearchAPI","options","request","useRequest","params","Event","response","appConfig","cachedCategory","useSessionStorage","HeaderAPI","acc","cur","c","formatIdentityItem","returnPaginatedResponse","formatRequestOptions","formatPaginatedResponseItems","formatIdentity","defaultOptions","defaultParams","SORT","ORDER"],"mappings":"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"}