{"version":3,"file":"BQaA4Wii.js","sources":["../../../../node_modules/.pnpm/@iconify+utils@3.0.1/node_modules/@iconify/utils/lib/icon/defaults.js","../../../../node_modules/.pnpm/@iconify+utils@3.0.1/node_modules/@iconify/utils/lib/icon/square.js","../../../../node_modules/.pnpm/@iconify+utils@3.0.1/node_modules/@iconify/utils/lib/svg/size.js","../../../../node_modules/.pnpm/@iconify+utils@3.0.1/node_modules/@iconify/utils/lib/customisations/defaults.js","../../../../node_modules/.pnpm/@iconify+utils@3.0.1/node_modules/@iconify/utils/lib/svg/defs.js","../../../../node_modules/.pnpm/@iconify+utils@3.0.1/node_modules/@iconify/utils/lib/svg/build.js","../../../../node_modules/.pnpm/@iconify+utils@3.0.1/node_modules/@iconify/utils/lib/svg/url.js","../../../../node_modules/.pnpm/@iconify+utils@3.0.1/node_modules/@iconify/utils/lib/svg/html.js","../../../../node_modules/.pnpm/@iconify+utils@3.0.1/node_modules/@iconify/utils/lib/css/common.js","../../../../node_modules/.pnpm/@iconify+utils@3.0.1/node_modules/@iconify/utils/lib/css/format.js","../../../../node_modules/.pnpm/@iconify+utils@3.0.1/node_modules/@iconify/utils/lib/css/icon.js","../../../../node_modules/.pnpm/@nuxt+icon@2.0.0_vite@7.1.3_vue@3.5.20/node_modules/@nuxt/icon/dist/runtime/components/shared.js","../../../../node_modules/.pnpm/@nuxt+icon@2.0.0_vite@7.1.3_vue@3.5.20/node_modules/@nuxt/icon/dist/runtime/components/css.js","../../../../node_modules/.pnpm/@nuxt+icon@2.0.0_vite@7.1.3_vue@3.5.20/node_modules/@nuxt/icon/dist/runtime/components/svg.js","../../../../node_modules/.pnpm/@nuxt+icon@2.0.0_vite@7.1.3_vue@3.5.20/node_modules/@nuxt/icon/dist/runtime/components/index.js"],"sourcesContent":["/**\n* Default values for dimensions\n*/\nconst defaultIconDimensions = Object.freeze({\n\tleft: 0,\n\ttop: 0,\n\twidth: 16,\n\theight: 16\n});\n/**\n* Default values for transformations\n*/\nconst defaultIconTransformations = Object.freeze({\n\trotate: 0,\n\tvFlip: false,\n\thFlip: false\n});\n/**\n* Default values for all optional IconifyIcon properties\n*/\nconst defaultIconProps = Object.freeze({\n\t...defaultIconDimensions,\n\t...defaultIconTransformations\n});\n/**\n* Default values for all properties used in ExtendedIconifyIcon\n*/\nconst defaultExtendedIconProps = Object.freeze({\n\t...defaultIconProps,\n\tbody: \"\",\n\thidden: false\n});\n\nexport { defaultExtendedIconProps, defaultIconDimensions, defaultIconProps, defaultIconTransformations };","/**\n* Make icon square\n*/\nfunction makeIconSquare(icon) {\n\tif (icon.width !== icon.height) {\n\t\tconst max = Math.max(icon.width, icon.height);\n\t\treturn {\n\t\t\t...icon,\n\t\t\twidth: max,\n\t\t\theight: max,\n\t\t\tleft: icon.left - (max - icon.width) / 2,\n\t\t\ttop: icon.top - (max - icon.height) / 2\n\t\t};\n\t}\n\treturn icon;\n}\n/**\n* Make icon viewBox square\n*/\nfunction makeViewBoxSquare(viewBox) {\n\tconst [left, top, width, height] = viewBox;\n\tif (width !== height) {\n\t\tconst max = Math.max(width, height);\n\t\treturn [\n\t\t\tleft - (max - width) / 2,\n\t\t\ttop - (max - height) / 2,\n\t\t\tmax,\n\t\t\tmax\n\t\t];\n\t}\n\treturn viewBox;\n}\n\nexport { makeIconSquare, makeViewBoxSquare };","/**\n* Regular expressions for calculating dimensions\n*/\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n\tif (ratio === 1) return size;\n\tprecision = precision || 100;\n\tif (typeof size === \"number\") return Math.ceil(size * ratio * precision) / precision;\n\tif (typeof size !== \"string\") return size;\n\tconst oldParts = size.split(unitsSplit);\n\tif (oldParts === null || !oldParts.length) return size;\n\tconst newParts = [];\n\tlet code = oldParts.shift();\n\tlet isNumber = unitsTest.test(code);\n\twhile (true) {\n\t\tif (isNumber) {\n\t\t\tconst num = parseFloat(code);\n\t\t\tif (isNaN(num)) newParts.push(code);\n\t\t\telse newParts.push(Math.ceil(num * ratio * precision) / precision);\n\t\t} else newParts.push(code);\n\t\tcode = oldParts.shift();\n\t\tif (code === void 0) return newParts.join(\"\");\n\t\tisNumber = !isNumber;\n\t}\n}\n\nexport { calculateSize };","import { defaultIconTransformations } from \"../icon/defaults.js\";\n\n/**\n* Default icon customisations values\n*/\nconst defaultIconSizeCustomisations = Object.freeze({\n\twidth: null,\n\theight: null\n});\nconst defaultIconCustomisations = Object.freeze({\n\t...defaultIconSizeCustomisations,\n\t...defaultIconTransformations\n});\n\nexport { defaultIconCustomisations, defaultIconSizeCustomisations };","function splitSVGDefs(content, tag = \"defs\") {\n\tlet defs = \"\";\n\tconst index = content.indexOf(\"<\" + tag);\n\twhile (index >= 0) {\n\t\tconst start = content.indexOf(\">\", index);\n\t\tconst end = content.indexOf(\"</\" + tag);\n\t\tif (start === -1 || end === -1) break;\n\t\tconst endEnd = content.indexOf(\">\", end);\n\t\tif (endEnd === -1) break;\n\t\tdefs += content.slice(start + 1, end).trim();\n\t\tcontent = content.slice(0, index).trim() + content.slice(endEnd + 1);\n\t}\n\treturn {\n\t\tdefs,\n\t\tcontent\n\t};\n}\n/**\n* Merge defs and content\n*/\nfunction mergeDefsAndContent(defs, content) {\n\treturn defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\n/**\n* Wrap SVG content, without wrapping definitions\n*/\nfunction wrapSVGContent(body, start, end) {\n\tconst split = splitSVGDefs(body);\n\treturn mergeDefsAndContent(split.defs, start + split.content + end);\n}\n\nexport { mergeDefsAndContent, splitSVGDefs, wrapSVGContent };","import { defaultIconProps } from \"../icon/defaults.js\";\nimport { defaultIconCustomisations } from \"../customisations/defaults.js\";\nimport { calculateSize } from \"./size.js\";\nimport { wrapSVGContent } from \"./defs.js\";\n\n/**\n* Check if value should be unset. Allows multiple keywords\n*/\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\n/**\n* Get SVG attributes and content from icon + customisations\n*\n* Does not generate style to make it compatible with frameworks that use objects for style, such as React.\n* Instead, it generates 'inline' value. If true, rendering engine should add verticalAlign: -0.125em to icon.\n*\n* Customisations should be normalised by platform specific parser.\n* Result should be converted to <svg> by platform specific parser.\n* Use replaceIDs to generate unique IDs for body.\n*/\nfunction iconToSVG(icon, customisations) {\n\tconst fullIcon = {\n\t\t...defaultIconProps,\n\t\t...icon\n\t};\n\tconst fullCustomisations = {\n\t\t...defaultIconCustomisations,\n\t\t...customisations\n\t};\n\tconst box = {\n\t\tleft: fullIcon.left,\n\t\ttop: fullIcon.top,\n\t\twidth: fullIcon.width,\n\t\theight: fullIcon.height\n\t};\n\tlet body = fullIcon.body;\n\t[fullIcon, fullCustomisations].forEach((props) => {\n\t\tconst transformations = [];\n\t\tconst hFlip = props.hFlip;\n\t\tconst vFlip = props.vFlip;\n\t\tlet rotation = props.rotate;\n\t\tif (hFlip) if (vFlip) rotation += 2;\n\t\telse {\n\t\t\ttransformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n\t\t\ttransformations.push(\"scale(-1 1)\");\n\t\t\tbox.top = box.left = 0;\n\t\t}\n\t\telse if (vFlip) {\n\t\t\ttransformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n\t\t\ttransformations.push(\"scale(1 -1)\");\n\t\t\tbox.top = box.left = 0;\n\t\t}\n\t\tlet tempValue;\n\t\tif (rotation < 0) rotation -= Math.floor(rotation / 4) * 4;\n\t\trotation = rotation % 4;\n\t\tswitch (rotation) {\n\t\t\tcase 1:\n\t\t\t\ttempValue = box.height / 2 + box.top;\n\t\t\t\ttransformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\ttransformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\ttempValue = box.width / 2 + box.left;\n\t\t\t\ttransformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n\t\t\t\tbreak;\n\t\t}\n\t\tif (rotation % 2 === 1) {\n\t\t\tif (box.left !== box.top) {\n\t\t\t\ttempValue = box.left;\n\t\t\t\tbox.left = box.top;\n\t\t\t\tbox.top = tempValue;\n\t\t\t}\n\t\t\tif (box.width !== box.height) {\n\t\t\t\ttempValue = box.width;\n\t\t\t\tbox.width = box.height;\n\t\t\t\tbox.height = tempValue;\n\t\t\t}\n\t\t}\n\t\tif (transformations.length) body = wrapSVGContent(body, \"<g transform=\\\"\" + transformations.join(\" \") + \"\\\">\", \"</g>\");\n\t});\n\tconst customisationsWidth = fullCustomisations.width;\n\tconst customisationsHeight = fullCustomisations.height;\n\tconst boxWidth = box.width;\n\tconst boxHeight = box.height;\n\tlet width;\n\tlet height;\n\tif (customisationsWidth === null) {\n\t\theight = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n\t\twidth = calculateSize(height, boxWidth / boxHeight);\n\t} else {\n\t\twidth = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n\t\theight = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n\t}\n\tconst attributes = {};\n\tconst setAttr = (prop, value) => {\n\t\tif (!isUnsetKeyword(value)) attributes[prop] = value.toString();\n\t};\n\tsetAttr(\"width\", width);\n\tsetAttr(\"height\", height);\n\tconst viewBox = [\n\t\tbox.left,\n\t\tbox.top,\n\t\tboxWidth,\n\t\tboxHeight\n\t];\n\tattributes.viewBox = viewBox.join(\" \");\n\treturn {\n\t\tattributes,\n\t\tviewBox,\n\t\tbody\n\t};\n}\n\nexport { iconToSVG, isUnsetKeyword };","/**\n* Encode SVG for use in url()\n*\n* Short alternative to encodeURIComponent() that encodes only stuff used in SVG, generating\n* smaller code.\n*/\nfunction encodeSVGforURL(svg) {\n\treturn svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\n/**\n* Generate data: URL from SVG\n*/\nfunction svgToData(svg) {\n\treturn \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\n/**\n* Generate url() from SVG\n*/\nfunction svgToURL(svg) {\n\treturn \"url(\\\"\" + svgToData(svg) + \"\\\")\";\n}\n\nexport { encodeSVGforURL, svgToData, svgToURL };","/**\n* Generate <svg>\n*/\nfunction iconToHTML(body, attributes) {\n\tlet renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : \" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\";\n\tfor (const attr in attributes) renderAttribsHTML += \" \" + attr + \"=\\\"\" + attributes[attr] + \"\\\"\";\n\treturn \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\" + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nexport { iconToHTML };","import { makeViewBoxSquare } from \"../icon/square.js\";\nimport { calculateSize } from \"../svg/size.js\";\nimport { iconToSVG } from \"../svg/build.js\";\nimport { svgToURL } from \"../svg/url.js\";\nimport { iconToHTML } from \"../svg/html.js\";\n\n/**\n* Generates common CSS rules for multiple icons, rendered as background/mask\n*/\nfunction getCommonCSSRules(options) {\n\tconst result = {\n\t\tdisplay: \"inline-block\",\n\t\twidth: \"1em\",\n\t\theight: \"1em\"\n\t};\n\tconst varName = options.varName;\n\tif (options.pseudoSelector) result[\"content\"] = \"''\";\n\tswitch (options.mode) {\n\t\tcase \"background\":\n\t\t\tif (varName) result[\"background-image\"] = \"var(--\" + varName + \")\";\n\t\t\tresult[\"background-repeat\"] = \"no-repeat\";\n\t\t\tresult[\"background-size\"] = \"100% 100%\";\n\t\t\tbreak;\n\t\tcase \"mask\":\n\t\t\tresult[\"background-color\"] = \"currentColor\";\n\t\t\tif (varName) result[\"mask-image\"] = result[\"-webkit-mask-image\"] = \"var(--\" + varName + \")\";\n\t\t\tresult[\"mask-repeat\"] = result[\"-webkit-mask-repeat\"] = \"no-repeat\";\n\t\t\tresult[\"mask-size\"] = result[\"-webkit-mask-size\"] = \"100% 100%\";\n\t\t\tbreak;\n\t}\n\treturn result;\n}\n/**\n* Generate CSS rules for one icon, rendered as background/mask\n*\n* This function excludes common rules\n*/\nfunction generateItemCSSRules(icon, options) {\n\tconst result = {};\n\tconst varName = options.varName;\n\tconst buildResult = iconToSVG(icon);\n\tlet viewBox = buildResult.viewBox;\n\tif (viewBox[2] !== viewBox[3]) if (options.forceSquare) viewBox = makeViewBoxSquare(viewBox);\n\telse result[\"width\"] = calculateSize(\"1em\", viewBox[2] / viewBox[3]);\n\tconst svg = iconToHTML(buildResult.body.replace(/currentColor/g, options.color || \"black\"), {\n\t\tviewBox: `${viewBox[0]} ${viewBox[1]} ${viewBox[2]} ${viewBox[3]}`,\n\t\twidth: `${viewBox[2]}`,\n\t\theight: `${viewBox[3]}`\n\t});\n\tconst url = svgToURL(svg);\n\tif (varName) result[\"--\" + varName] = url;\n\telse switch (options.mode) {\n\t\tcase \"background\":\n\t\t\tresult[\"background-image\"] = url;\n\t\t\tbreak;\n\t\tcase \"mask\":\n\t\t\tresult[\"mask-image\"] = result[\"-webkit-mask-image\"] = url;\n\t\t\tbreak;\n\t}\n\treturn result;\n}\n/**\n* Generate content for one icon, rendered as content of pseudo-selector\n*/\nfunction generateItemContent(icon, options) {\n\tconst buildResult = iconToSVG(icon);\n\tconst viewBox = buildResult.viewBox;\n\tconst height = options.height;\n\tconst width = options.width ?? calculateSize(height, viewBox[2] / viewBox[3]);\n\tconst svg = iconToHTML(buildResult.body.replace(/currentColor/g, options.color || \"black\"), {\n\t\tviewBox: `${viewBox[0]} ${viewBox[1]} ${viewBox[2]} ${viewBox[3]}`,\n\t\twidth: width.toString(),\n\t\theight: height.toString()\n\t});\n\treturn svgToURL(svg);\n}\n\nexport { generateItemCSSRules, generateItemContent, getCommonCSSRules };","const format = {\n\tselectorStart: {\n\t\tcompressed: \"{\",\n\t\tcompact: \" {\",\n\t\texpanded: \" {\"\n\t},\n\tselectorEnd: {\n\t\tcompressed: \"}\",\n\t\tcompact: \"; }\\n\",\n\t\texpanded: \";\\n}\\n\"\n\t},\n\trule: {\n\t\tcompressed: \"{key}:\",\n\t\tcompact: \" {key}: \",\n\t\texpanded: \"\\n  {key}: \"\n\t}\n};\n/**\n* Format data\n*\n* Key is selector, value is list of rules\n*/\nfunction formatCSS(data, mode = \"expanded\") {\n\tconst results = [];\n\tfor (let i = 0; i < data.length; i++) {\n\t\tconst { selector, rules } = data[i];\n\t\tconst fullSelector = selector instanceof Array ? selector.join(mode === \"compressed\" ? \",\" : \", \") : selector;\n\t\tlet entry = fullSelector + format.selectorStart[mode];\n\t\tlet firstRule = true;\n\t\tfor (const key in rules) {\n\t\t\tif (!firstRule) entry += \";\";\n\t\t\tentry += format.rule[mode].replace(\"{key}\", key) + rules[key];\n\t\t\tfirstRule = false;\n\t\t}\n\t\tentry += format.selectorEnd[mode];\n\t\tresults.push(entry);\n\t}\n\treturn results.join(mode === \"compressed\" ? \"\" : \"\\n\");\n}\n\nexport { formatCSS };","import { defaultIconProps } from \"../icon/defaults.js\";\nimport { generateItemCSSRules, generateItemContent, getCommonCSSRules } from \"./common.js\";\nimport { formatCSS } from \"./format.js\";\n\n/**\n* Get CSS for icon, rendered as background or mask\n*/\nfunction getIconCSS(icon, options = {}) {\n\tconst body = options.customise ? options.customise(icon.body) : icon.body;\n\tconst mode = options.mode || (options.color || !body.includes(\"currentColor\") ? \"background\" : \"mask\");\n\tlet varName = options.varName;\n\tif (varName === void 0 && mode === \"mask\") varName = \"svg\";\n\tconst newOptions = {\n\t\t...options,\n\t\tmode,\n\t\tvarName\n\t};\n\tif (mode === \"background\") delete newOptions.varName;\n\tconst rules = {\n\t\t...options.rules,\n\t\t...getCommonCSSRules(newOptions),\n\t\t...generateItemCSSRules({\n\t\t\t...defaultIconProps,\n\t\t\t...icon,\n\t\t\tbody\n\t\t}, newOptions)\n\t};\n\tconst selector = options.iconSelector || \".icon\";\n\treturn formatCSS([{\n\t\tselector,\n\t\trules\n\t}], newOptions.format);\n}\n/**\n* Get CSS for icon, rendered as content\n*/\nfunction getIconContentCSS(icon, options) {\n\tconst body = options.customise ? options.customise(icon.body) : icon.body;\n\tconst content = generateItemContent({\n\t\t...defaultIconProps,\n\t\t...icon,\n\t\tbody\n\t}, options);\n\tconst selector = options.iconSelector || \".icon::after\";\n\treturn formatCSS([{\n\t\tselector,\n\t\trules: {\n\t\t\t...options.rules,\n\t\t\tcontent\n\t\t}\n\t}], options.format);\n}\n\nexport { getIconCSS, getIconContentCSS };","import { computed } from \"vue\";\nimport { getIcon as _getIcon, addIcon as _addIcon, loadIcon as _loadIcon } from \"@iconify/vue\";\nimport { useAppConfig } from \"#imports\";\nimport { init as initClientBundle } from \"#build/nuxt-icon-client-bundle\";\nexport { initClientBundle };\nexport async function loadIcon(name, timeout) {\n  if (!name)\n    return null;\n  initClientBundle(_addIcon);\n  const _icon = _getIcon(name);\n  if (_icon)\n    return _icon;\n  let timeoutWarn;\n  const load = _loadIcon(name).catch(() => {\n    console.warn(`[Icon] failed to load icon \\`${name}\\``);\n    return null;\n  });\n  if (timeout > 0)\n    await Promise.race([\n      load,\n      new Promise((resolve) => {\n        timeoutWarn = setTimeout(() => {\n          console.warn(`[Icon] loading icon \\`${name}\\` timed out after ${timeout}ms`);\n          resolve();\n        }, timeout);\n      })\n    ]).finally(() => clearTimeout(timeoutWarn));\n  else\n    await load;\n  return _getIcon(name);\n}\nexport function useResolvedName(getName) {\n  const options = useAppConfig().icon;\n  const collections = (options.collections || []).sort((a, b) => b.length - a.length);\n  return computed(() => {\n    const name = getName();\n    const bare = name.startsWith(options.cssSelectorPrefix) ? name.slice(options.cssSelectorPrefix.length) : name;\n    const resolved = options.aliases?.[bare] || bare;\n    if (!resolved.includes(\":\")) {\n      const collection = collections.find((c) => resolved.startsWith(c + \"-\"));\n      return collection ? collection + \":\" + resolved.slice(collection.length + 1) : resolved;\n    }\n    return resolved;\n  });\n}\nexport function resolveCustomizeFn(customize, globalCustomize) {\n  if (customize === false) return void 0;\n  if (customize === true || customize === null) return globalCustomize;\n  return customize;\n}\n","import { addIcon, getIcon as _getIcon } from \"@iconify/vue\";\nimport { computed, watch, h, defineComponent } from \"vue\";\nimport { getIconCSS } from \"@iconify/utils/lib/css/icon\";\nimport { loadIcon, resolveCustomizeFn } from \"./shared.js\";\nimport { useAppConfig, useNuxtApp, useHead, useRuntimeConfig, onServerPrefetch } from \"#imports\";\nlet cssSelectors;\nconst SYMBOL_SERVER_CSS = \"NUXT_ICONS_SERVER_CSS\";\nfunction escapeCssSelector(selector) {\n  return selector.replace(/([^\\w-])/g, \"\\\\$1\");\n}\nfunction getAllSelectors() {\n  if (cssSelectors)\n    return cssSelectors;\n  cssSelectors = /* @__PURE__ */ new Set();\n  const filter = (selector) => {\n    selector = selector.replace(/^:where\\((.*)\\)$/, \"$1\").trim();\n    if (selector.startsWith(\".\")) {\n      return selector;\n    }\n  };\n  const scanCssRules = (rules) => {\n    if (!rules?.length)\n      return;\n    for (const rule of rules) {\n      if (rule?.cssRules) {\n        scanCssRules(rule.cssRules);\n      }\n      const selectorRaw = rule?.selectorText;\n      if (typeof selectorRaw === \"string\") {\n        const selector = filter(selectorRaw);\n        if (selector)\n          cssSelectors.add(selector);\n      }\n    }\n  };\n  if (typeof document !== \"undefined\") {\n    for (const styleSheet of document.styleSheets) {\n      try {\n        const rules = styleSheet.cssRules || styleSheet.rules;\n        scanCssRules(rules);\n      } catch {\n      }\n    }\n  }\n  return cssSelectors;\n}\nexport const NuxtIconCss = /* @__PURE__ */ defineComponent({\n  name: \"NuxtIconCss\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    customize: {\n      type: [Function, Boolean, null],\n      default: null,\n      required: false\n    }\n  },\n  setup(props) {\n    const nuxt = useNuxtApp();\n    const options = useAppConfig().icon;\n    const cssClass = computed(() => props.name ? options.cssSelectorPrefix + props.name : \"\");\n    function getIcon(name) {\n      if (!name)\n        return;\n      const icon = _getIcon(name);\n      if (icon)\n        return icon;\n      const payload = nuxt.payload?.data?.[name];\n      if (payload) {\n        addIcon(name, payload);\n        return payload;\n      }\n    }\n    const selector = computed(() => \".\" + escapeCssSelector(cssClass.value));\n    function getCSS(icon, withLayer = true) {\n      let iconSelector = selector.value;\n      if (options.cssWherePseudo) {\n        iconSelector = `:where(${iconSelector})`;\n      }\n      const css = getIconCSS(icon, {\n        iconSelector,\n        format: \"compressed\",\n        customise: resolveCustomizeFn(props.customize, options.customize)\n      });\n      if (options.cssLayer && withLayer) {\n        return `@layer ${options.cssLayer} { ${css} }`;\n      }\n      return css;\n    }\n    if (import.meta.client) {\n      const selectors = getAllSelectors();\n      async function mountCSS(icon) {\n        if (selectors.has(selector.value))\n          return;\n        if (typeof document === \"undefined\")\n          return;\n        const style = document.createElement(\"style\");\n        style.textContent = getCSS(icon);\n        if (import.meta.dev) {\n          style.dataset.nuxtIconDev = props.name;\n        }\n        const firstStyle = document.head.querySelector('style, link[rel=\"stylesheet\"]');\n        if (firstStyle)\n          document.head.insertBefore(style, firstStyle);\n        else\n          document.head.appendChild(style);\n        selectors.add(selector.value);\n      }\n      watch(\n        () => props.name,\n        () => {\n          if (selectors.has(selector.value)) {\n            return;\n          }\n          const data = getIcon(props.name);\n          if (data) {\n            mountCSS(data);\n          } else {\n            loadIcon(props.name, import.meta.server ? options.fetchTimeout : -1).then((data2) => {\n              if (data2)\n                mountCSS(data2);\n            }).catch(() => null);\n          }\n        },\n        { immediate: true }\n      );\n    }\n    onServerPrefetch(async () => {\n      if (import.meta.server) {\n        const configs = useRuntimeConfig().icon || {};\n        if (!configs?.serverKnownCssClasses?.includes(cssClass.value)) {\n          const icon = await loadIcon(props.name, options.fetchTimeout).catch(() => null);\n          if (!icon)\n            return null;\n          let ssrCSS = nuxt.vueApp._context.provides[SYMBOL_SERVER_CSS];\n          if (!ssrCSS) {\n            ssrCSS = nuxt.vueApp._context.provides[SYMBOL_SERVER_CSS] = /* @__PURE__ */ new Map();\n            nuxt.runWithContext(() => {\n              useHead({\n                style: [\n                  () => {\n                    const sep = import.meta.dev ? \"\\n\" : \"\";\n                    let css = Array.from(ssrCSS.values()).sort().join(sep);\n                    if (options.cssLayer) {\n                      css = `@layer ${options.cssLayer} {${sep}${css}${sep}}`;\n                    }\n                    return { innerHTML: css };\n                  }\n                ]\n              }, {\n                tagPriority: \"low\"\n              });\n            });\n          }\n          if (props.name && !ssrCSS.has(props.name)) {\n            const css = getCSS(icon, false);\n            ssrCSS.set(props.name, css);\n          }\n          return null;\n        }\n      }\n    });\n    return () => h(\"span\", { class: [\"iconify\", cssClass.value] });\n  }\n});\n","import { Icon as Iconify, addIcon } from \"@iconify/vue\";\nimport { h } from \"vue\";\nimport { initClientBundle, loadIcon, useResolvedName, resolveCustomizeFn } from \"./shared.js\";\nimport { useAsyncData, useNuxtApp, defineComponent, useAppConfig, onServerPrefetch } from \"#imports\";\nexport const NuxtIconSvg = /* @__PURE__ */ defineComponent({\n  name: \"NuxtIconSvg\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    customize: {\n      type: [Function, Boolean, null],\n      default: null,\n      required: false\n    }\n  },\n  setup(props, { slots }) {\n    const nuxt = useNuxtApp();\n    const options = useAppConfig().icon;\n    const name = useResolvedName(() => props.name);\n    const storeKey = \"i-\" + name.value;\n    if (name.value) {\n      onServerPrefetch(async () => {\n        if (import.meta.server) {\n          await useAsyncData(\n            storeKey,\n            async () => await loadIcon(name.value, options.fetchTimeout),\n            { deep: false }\n          );\n        }\n      });\n      if (import.meta.client) {\n        const payload = nuxt.payload.data[storeKey];\n        if (payload) {\n          addIcon(name.value, payload);\n        } else {\n          initClientBundle(addIcon);\n        }\n      }\n    }\n    return () => h(Iconify, {\n      icon: name.value,\n      ssr: true,\n      // Iconify uses `customise`, where we expose `customize` for consistency\n      customise: resolveCustomizeFn(props.customize, options.customize)\n    }, slots);\n  }\n});\n","import { computed, defineComponent, h } from \"vue\";\nimport { NuxtIconCss } from \"./css.js\";\nimport { NuxtIconSvg } from \"./svg.js\";\nimport { useResolvedName } from \"./shared.js\";\nimport { useAppConfig, useNuxtApp } from \"#imports\";\nexport default defineComponent({\n  name: \"NuxtIcon\",\n  props: {\n    name: {\n      type: String,\n      required: true\n    },\n    mode: {\n      type: String,\n      required: false,\n      default: null\n    },\n    size: {\n      type: [Number, String],\n      required: false,\n      default: null\n    },\n    customize: {\n      type: [Function, Boolean, null],\n      default: null,\n      required: false\n    }\n  },\n  setup(props, { slots }) {\n    const nuxtApp = useNuxtApp();\n    const runtimeOptions = useAppConfig().icon;\n    const name = useResolvedName(() => props.name);\n    const component = computed(\n      () => nuxtApp.vueApp?.component(name.value) || ((props.mode || runtimeOptions.mode) === \"svg\" ? NuxtIconSvg : NuxtIconCss)\n    );\n    const style = computed(() => {\n      const size = props.size || runtimeOptions.size;\n      return size ? { fontSize: Number.isNaN(+size) ? size : size + \"px\" } : null;\n    });\n    return () => h(\n      component.value,\n      {\n        ...runtimeOptions.attrs,\n        name: name.value,\n        class: runtimeOptions.class,\n        style: style.value,\n        customize: props.customize\n      },\n      slots\n    );\n  }\n});\n"],"names":["defaultIconDimensions","defaultIconTransformations","defaultIconProps","makeViewBoxSquare","viewBox","left","top","width","height","max","unitsSplit","unitsTest","calculateSize","size","ratio","precision","oldParts","newParts","code","isNumber","num","defaultIconSizeCustomisations","defaultIconCustomisations","splitSVGDefs","content","tag","defs","index","start","end","endEnd","mergeDefsAndContent","wrapSVGContent","body","split","isUnsetKeyword","value","iconToSVG","icon","customisations","fullIcon","fullCustomisations","box","props","transformations","hFlip","vFlip","rotation","tempValue","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","prop","encodeSVGforURL","svg","svgToData","svgToURL","iconToHTML","renderAttribsHTML","attr","getCommonCSSRules","options","result","varName","generateItemCSSRules","buildResult","url","format","formatCSS","data","mode","results","i","selector","rules","entry","firstRule","key","getIconCSS","newOptions","loadIcon","name","timeout","_icon","_getIcon","_loadIcon","useResolvedName","getName","useAppConfig","collections","a","b","computed","bare","resolved","collection","resolveCustomizeFn","customize","globalCustomize","cssSelectors","escapeCssSelector","getAllSelectors","filter","scanCssRules","rule","selectorRaw","styleSheet","NuxtIconCss","defineComponent","nuxt","useNuxtApp","cssClass","getIcon","payload","addIcon","getCSS","withLayer","iconSelector","css","selectors","mountCSS","style","firstStyle","watch","data2","h","NuxtIconSvg","slots","storeKey","Iconify","nuxtApp","runtimeOptions","component"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}