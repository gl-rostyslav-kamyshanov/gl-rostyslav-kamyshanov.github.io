{"version":3,"file":"DiZvWMfZ.js","sources":["../../../../app/services/identities.ts","../../../../app/queries/identities.ts"],"sourcesContent":["import useRequest from \"~/composables/use-request\";\nimport { formatIdentity, formatPaginatedResponseItems, formatRequestOptions } from \"~/services/format\";\n\nexport const IdentitiesAPI = {\n  load(options?: IRequestPaginatedOptions): Promise<IPaginatedResponse<IModelIdentity>> {\n    const { request } = useRequest();\n    const generalParams = formatRequestOptions(options);\n    const params = { ...generalParams, filters: { media_type: \"identity\", archived: options?.archived } };\n\n    return request\n      .post<IPaginatedResponse<IResponseIdentity>>(\"/api/identity/list\", { body: params })\n      .then(response => formatPaginatedResponseItems(response, formatIdentity));\n  },\n\n  loadById(id: string): Promise<IModelIdentity> {\n    const { request } = useRequest();\n\n    return request\n      .get<IContentResponse<IResponseIdentity>>(`/api/identity/get_by_id/id/${id}`)\n      .then(async (response) => {\n        return formatIdentity(response.content);\n      });\n  },\n};\n","import type { Ref } from \"vue\";\nimport { defineQueryOptions, useQuery } from \"@pinia/colada\";\nimport { IdentitiesAPI } from \"~/services/identities\";\n\nexport const IDENTITIES_QUERY_KEY = {\n  root: [\"identities\"] as const,\n  list: (filters: IRequestPaginatedOptions) =>\n    [...IDENTITIES_QUERY_KEY.root, \"list\", {\n      page: filters.page,\n      pageSize: filters.pageSize,\n      sort: filters.sort,\n      order: filters.order,\n      archived: filters.archived,\n    }] as const,\n  byId: (id: string) =>\n    [...IDENTITIES_QUERY_KEY.root, \"byId\", id] as const,\n};\n\nexport const identitiesQueryOptions = defineQueryOptions(\n  (filters: IRequestPaginatedOptions) => ({\n    key: IDENTITIES_QUERY_KEY.list(filters),\n    query: () => IdentitiesAPI.load(filters),\n    staleTime: 1000 * 60 * 15, // 15 minutes\n  }),\n);\n\nexport const identityByIdQueryOptions = defineQueryOptions(\n  (id: string) => ({\n    key: IDENTITIES_QUERY_KEY.byId(id),\n    query: () => IdentitiesAPI.loadById(id),\n    staleTime: 1000 * 60 * 15, // 15 minutes\n  }),\n);\n\nexport function useIdentities(filters: Ref<IRequestPaginatedOptions> | (() => IRequestPaginatedOptions)) {\n  return useQuery(identitiesQueryOptions, filters);\n}\n\nexport function useIdentityById(id: Ref<string> | (() => string)) {\n  return useQuery(identityByIdQueryOptions, id);\n}\n"],"names":["IdentitiesAPI","options","request","useRequest","params","formatRequestOptions","response","formatPaginatedResponseItems","formatIdentity","id","IDENTITIES_QUERY_KEY","filters","identityByIdQueryOptions","defineQueryOptions","useIdentityById","useQuery"],"mappings":"wEAGO,MAAMA,EAAgB,CAC3B,KAAKC,EAAiF,CACpF,KAAM,CAAE,QAAAC,CAAA,EAAYC,EAAA,EAEdC,EAAS,CAAE,GADKC,EAAqBJ,CAAO,EACf,QAAS,CAAE,WAAY,WAAY,SAAUA,GAAS,SAAS,EAElG,OAAOC,EACJ,KAA4C,qBAAsB,CAAE,KAAME,CAAA,CAAQ,EAClF,KAAKE,GAAYC,EAA6BD,EAAUE,CAAc,CAAC,CAC5E,EAEA,SAASC,EAAqC,CAC5C,KAAM,CAAE,QAAAP,CAAA,EAAYC,EAAA,EAEpB,OAAOD,EACJ,IAAyC,8BAA8BO,CAAE,EAAE,EAC3E,KAAK,MAAOH,GACJE,EAAeF,EAAS,OAAO,CACvC,CACL,CACF,ECnBaI,EAAuB,CAClC,KAAM,CAAC,YAAY,EACnB,KAAOC,GACL,CAAC,GAAGD,EAAqB,KAAM,OAAQ,CACrC,KAAMC,EAAQ,KACd,SAAUA,EAAQ,SAClB,KAAMA,EAAQ,KACd,MAAOA,EAAQ,MACf,SAAUA,EAAQ,QAAA,CACnB,EACH,KAAOF,GACL,CAAC,GAAGC,EAAqB,KAAM,OAAQD,CAAE,CAC7C,EAUaG,EAA2BC,EACrCJ,IAAgB,CACf,IAAKC,EAAqB,KAAKD,CAAE,EACjC,MAAO,IAAMT,EAAc,SAASS,CAAE,EACtC,UAAW,IAAO,GAAK,EAAA,EAE3B,EAMO,SAASK,EAAgBL,EAAkC,CAChE,OAAOM,EAASH,EAA0BH,CAAE,CAC9C"}