{"version":3,"file":"DcK2bPoH.js","sources":["../../../../app/services/format/billing.ts","../../../../app/services/billing.ts"],"sourcesContent":["import type { CardTokenParams } from \"~~/modules/mercadopago/module\";\nimport formatDate from \"~/utils/format-date\";\nimport { getPriceLabel } from \"~/utils/subscription\";\n\nexport const formatCreditCardInfo = (item: IResponseCreditCardInfo): IModelCreditCard => {\n  const cardExpiration = item.expireMonth && item.expireYear ? `${item.expireMonth}/${String(item.expireYear).substring(2)}` : \"\";\n\n  return {\n    id: item.id ?? \"\",\n    cardHolderName: item.displayName ?? \"\",\n    cardNumber: item.number ?? \"\",\n    cardExpiration,\n    cardCVV: \"\",\n    cardType: item.type,\n  };\n};\n\nexport const formatMercadoPagoCard = (card: IModelCreditCard): CardTokenParams => {\n  const [month, year] = card.cardExpiration.split(\"/\");\n\n  return {\n    cardNumber: card.cardNumber.replace(/\\s+/g, \"\"),\n    cardholderName: card.cardHolderName,\n    cardExpirationMonth: month,\n    cardExpirationYear: year,\n    securityCode: card.cardCVV,\n  };\n};\n\nexport const formatRedeemAccessCode = (item: IResponseReedemCode): IModelCommerce => ({\n  id: item._id,\n  title: item.title,\n  description: item.description,\n  price: item.price,\n  currency: item.currency || \"N/A\",\n  startDate: item.startDate,\n  endDate: item.endDate,\n  isActive: item.active,\n  autoRenew: item.autoRenew,\n  type: item.type,\n  originalProductId: item.originalProductId,\n  lastPayment: item.lastPayment || 0,\n});\n\nexport const formatOrderItem = (item: IResponseBillingHistory): IModelBillingOrder => {\n  const getFormattedDate = (date: Date) => formatDate(date, \"d.L.yyyy\");\n\n  const amount = getPriceLabel(item.price, item.currency);\n\n  return {\n    id: item.details.orderId,\n    date: getFormattedDate(item.date),\n    name: item.title,\n    type: item.details.productType,\n    amount,\n  };\n};\n\nexport const formatPaginatedOrders = (\n  response: [IPaginatedResponse<IResponsePPVTicket>, IPaginatedResponse<IResponseCustomerSubscription>],\n  page = 0,\n  pageSize = 10,\n): IPaginatedResponse<IModelBillingOrder> => {\n  const paginate = (array: IResponsePPVTicket[] | IResponseCustomerSubscription[], pageSize: number, pageNumber: number) => {\n    return array.slice((pageNumber - 1) * pageSize, pageNumber * pageSize);\n  };\n\n  const content = response\n    .reduce((acc: any, item: any) => {\n      acc.entries = [...item.content.entries].concat(acc.entries ? [...acc.entries] : []);\n\n      return acc;\n    }, {});\n\n  const filteredEntries = content.entries\n    .sort((a: IResponseBillingOrder, b: IResponseBillingOrder) => new Date(b.updated).getTime() - new Date(a.updated).getTime());\n\n  content.count = filteredEntries.length;\n  content.entryCount = pageSize;\n  content.itemsPerPage = pageSize;\n  content.entries = paginate(filteredEntries.map(formatOrderItem), pageSize, page + 1);\n\n  return { content, error: false, message: \"ok\" };\n};\n","import type { CardTokenParams, CardTokenUpdateParams, InstanceMercadoPago } from \"~~/modules/mercadopago/module\";\nimport Cookies from \"js-cookie\";\nimport useRequest from \"~/composables/use-request\";\nimport useUserStore from \"~/stores/user\";\nimport {\n  formatCreditCardInfo,\n  formatOrderItem,\n  formatPaginatedResponseItems,\n  formatRedeemAccessCode,\n} from \"./format\";\n\nconst updateStoredCreditCard = (card: IModelCreditCard | null) => {\n  const userStore = useUserStore();\n  userStore.creditCard = card;\n};\n\ninterface IRequestPurchaseOptions {\n  productId: string;\n  token: string;\n  saveAsDefault?: boolean;\n}\n\nconst BillingAPI = {\n  load(): Promise<IModelCreditCard | null> {\n    const userStore = useUserStore();\n\n    if (userStore.creditCard)\n      return Promise.resolve(userStore.creditCard);\n\n    const { request } = useRequest();\n    return request\n      .get<IContentResponse<IResponseCreditCardInfo>>(\"/api/payment/user_method_info\")\n      .then((response) => {\n        if (Object.keys(response.content).length !== 0) {\n          userStore.creditCard = formatCreditCardInfo(response.content);\n          return formatCreditCardInfo(response.content);\n        }\n        return null;\n      });\n  },\n\n  loadHistory(options: IRequestBillingHistoryParams) {\n    const { request } = useRequest();\n\n    return request\n      .get<IPaginatedResponse<IResponseBillingHistory>>(\"/api/commerce/billing_history\", { query: options })\n      .then((response) => {\n        const formattedBillingHistory = formatPaginatedResponseItems(response, formatOrderItem);\n\n        return formattedBillingHistory;\n      });\n  },\n\n  update(tokenID: string): Promise<void> {\n    const { request } = useRequest();\n    const payload = {\n      card: { token: tokenID },\n    };\n\n    return request\n      .post<IContentResponse<IResponseCreditCardInfo>>(\"/api/commerce/set_billing_info\", { body: payload })\n      .then(response => updateStoredCreditCard(formatCreditCardInfo(response.content)));\n  },\n\n  delete(): Promise<void> {\n    const { request } = useRequest();\n    const userStore = useUserStore();\n    const payload = { card_id: userStore.creditCard?.id, user_id: userStore.user?.id };\n\n    return request\n      .post(\"/api/payment/delete_method\", { body: payload })\n      .then(() => updateStoredCreditCard(null));\n  },\n\n  redeemAccessCode(code: string): Promise<IModelCommerce> {\n    const { request } = useRequest();\n\n    return request\n      .post<IContentResponse<IResponseReedemCode>>(\"/api/commerce/redeem_code\", { body: { code } })\n      .then((response) => {\n        return formatRedeemAccessCode(response.content);\n      });\n  },\n\n  purchase(options: IRequestPurchaseOptions) {\n    const { request } = useRequest();\n\n    return request\n      .post(\"/api/payment/purchase\", { body: options });\n  },\n\n  async createMercadoPagoCardToken(card: CardTokenParams): Promise<string> {\n    const nuxtApp = useNuxtApp();\n    const userStore = useUserStore();\n    const mercadopago = nuxtApp.$mercadopago as InstanceMercadoPago;\n\n    try {\n      const response = await mercadopago?.createCardToken(card);\n      if (!response)\n        throw new Error(\"ERR400GN00\"); // Error (\"Bad Request\")\n\n      userStore.creditCardToken = response.id;\n\n      return response.id;\n    }\n    catch (error: any) {\n      throw new Error(error.message);\n    }\n  },\n\n  async updateMercadoPagoCardToken(params: CardTokenUpdateParams): Promise<string> {\n    const nuxtApp = useNuxtApp();\n    const userStore = useUserStore();\n    const mercadopago = nuxtApp.$mercadopago as InstanceMercadoPago;\n\n    try {\n      const response = await mercadopago?.updateCardToken(params);\n\n      if (!response)\n        throw new Error(\"ERR400GN00\"); // Error (\"Bad Request\")\n\n      userStore.creditCardToken = response.id;\n\n      return response.id;\n    }\n    catch (error: any) {\n      throw new Error(error.message);\n    }\n  },\n\n  async payWithMercadoPagoWithUpdatedToken(subscriptionId: string, options: CardTokenUpdateParams): Promise<void> {\n    try {\n      const tokenID = await BillingAPI.updateMercadoPagoCardToken(options);\n      await BillingAPI.purchase({ productId: subscriptionId, token: tokenID });\n    }\n    catch (error: any) {\n      throw new Error(error.message);\n    }\n  },\n\n  async payWithMercadoPagoCreditCard(subscriptionId: string, card: CardTokenParams): Promise<void> {\n    try {\n      const tokenID = await BillingAPI.createMercadoPagoCardToken(card);\n      await BillingAPI.purchase({ productId: subscriptionId, token: tokenID });\n    }\n    catch (error: any) {\n      throw new Error(error.message);\n    }\n  },\n\n  initPayment(productId: string, callbackUrl: string, locale: TAvailableLocale = \"en\"): Promise<void> {\n    const { request } = useRequest();\n    const payload = { productId, callbackUrl, language: locale };\n\n    return request\n      .post<IContentResponse<IResponseInitPayment>>(\"/api/payment/initialize\", { body: payload })\n      .then((response) => {\n        Cookies.set(`transactionId_${productId}`, response.content.transactionId, {\n          expires: new Date(new Date().getTime() + 5 * 60 * 1000), // 5 minutes\n          sameSite: \"strict\",\n        });\n        return response.content.authorizationUrl;\n      })\n      .then((url) => {\n        window.location.href = url;\n      });\n  },\n\n  verifyTransaction(transactionId: string): Promise<void> {\n    const { request } = useRequest();\n    const payload = { transactionId };\n\n    return request\n      .post(\"/api/payment/verify\", { body: payload });\n  },\n\n  confirmProcessingPayment(transactionId: string): Promise<void> {\n    const { request } = useRequest();\n    const payload = { transactionId };\n\n    return request\n      .post(\"/api/payment/confirm_processing\", { body: payload });\n  },\n};\n\nexport default BillingAPI;\n"],"names":["formatCreditCardInfo","item","cardExpiration","formatMercadoPagoCard","card","month","year","formatRedeemAccessCode","formatOrderItem","getFormattedDate","date","formatDate","amount","getPriceLabel","updateStoredCreditCard","userStore","useUserStore","BillingAPI","request","useRequest","response","options","formatPaginatedResponseItems","tokenID","payload","code","nuxtApp","useNuxtApp","mercadopago","error","params","subscriptionId","productId","callbackUrl","locale","Cookies","url","transactionId"],"mappings":"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"}