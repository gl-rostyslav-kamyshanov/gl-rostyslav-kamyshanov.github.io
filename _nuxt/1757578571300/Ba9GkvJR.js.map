{"version":3,"file":"Ba9GkvJR.js","sources":["../../../../app/services/format/ppv-ticket.ts","../../../../app/services/ppv-ticket.ts"],"sourcesContent":["import Event from \"~/services/events/event.model\";\n\nexport const formatPPVTicket = (ticket: IResponsePPVTicket): IModelCommerce => {\n  return {\n    id: ticket._id,\n    price: ticket.price,\n    currency: ticket.product?.currency || \"N/A\",\n    title: ticket.title,\n    eventId: ticket.product?.event_id,\n    originalProductId: ticket.originalProductId,\n    description: ticket.product?.description || \"\",\n    event: ticket.relatedEvent ? Event.format(ticket.relatedEvent) : undefined,\n    type: \"ppv\",\n    startDate: ticket.startDate || 0,\n    endDate: ticket.endDate || 0,\n    lastPayment: ticket.lastPayment || 0,\n  };\n};\n","import useRequest from \"~/composables/use-request\";\nimport useUserStore from \"~/stores/user\";\nimport { formatPaginatedResponseItems, formatPPVTicket, formatRequestOptions } from \"./format\";\n\nconst TicketAPI = {\n  load(options?: IRequestPaginatedOptions) {\n    const { request } = useRequest();\n    const userStore = useUserStore();\n    const params = formatRequestOptions(options);\n\n    return request\n      .get<IPaginatedResponse<IResponsePPVTicket>>(\"/api/commerce/get_customer_orders\", { query: params })\n      .then((response) => {\n        const ppvTickets = formatPaginatedResponseItems(response, formatPPVTicket);\n        userStore.ppvTickets = ppvTickets.content.entries;\n\n        return ppvTickets;\n      });\n  },\n  loadUserTicketById(id: string): Promise<IModelCommerce> {\n    const { request } = useRequest();\n    const userStore = useUserStore();\n\n    return request\n      .get<IContentResponse<IResponsePPVTicket>>(`/api/commerce/get_customer_orders_by_id/id/${id}`)\n      .then((response) => {\n        const ppvTickets = formatPPVTicket(response.content);\n\n        if (!userStore.ppvTickets.find(ticket => ticket.id === ppvTickets.id))\n          userStore.ppvTickets.push(ppvTickets);\n\n        return ppvTickets;\n      });\n  },\n};\n\nexport default TicketAPI;\n"],"names":["formatPPVTicket","ticket","Event","TicketAPI","options","request","useRequest","userStore","useUserStore","params","formatRequestOptions","response","ppvTickets","formatPaginatedResponseItems","id"],"mappings":"gEAEO,MAAMA,EAAmBC,IACvB,CACL,GAAIA,EAAO,IACX,MAAOA,EAAO,MACd,SAAUA,EAAO,SAAS,UAAY,MACtC,MAAOA,EAAO,MACd,QAASA,EAAO,SAAS,SACzB,kBAAmBA,EAAO,kBAC1B,YAAaA,EAAO,SAAS,aAAe,GAC5C,MAAOA,EAAO,aAAeC,EAAM,OAAOD,EAAO,YAAY,EAAI,OACjE,KAAM,MACN,UAAWA,EAAO,WAAa,EAC/B,QAASA,EAAO,SAAW,EAC3B,YAAaA,EAAO,aAAe,CAAA,GCXjCE,EAAY,CAChB,KAAKC,EAAoC,CACvC,KAAM,CAAE,QAAAC,CAAA,EAAYC,EAAA,EACdC,EAAYC,EAAA,EACZC,EAASC,EAAqBN,CAAO,EAE3C,OAAOC,EACJ,IAA4C,oCAAqC,CAAE,MAAOI,EAAQ,EAClG,KAAME,GAAa,CAClB,MAAMC,EAAaC,EAA6BF,EAAUX,CAAe,EACzE,OAAAO,EAAU,WAAaK,EAAW,QAAQ,QAEnCA,CACT,CAAC,CACL,EACA,mBAAmBE,EAAqC,CACtD,KAAM,CAAE,QAAAT,CAAA,EAAYC,EAAA,EACdC,EAAYC,EAAA,EAElB,OAAOH,EACJ,IAA0C,8CAA8CS,CAAE,EAAE,EAC5F,KAAMH,GAAa,CAClB,MAAMC,EAAaZ,EAAgBW,EAAS,OAAO,EAEnD,OAAKJ,EAAU,WAAW,QAAeN,EAAO,KAAOW,EAAW,EAAE,GAClEL,EAAU,WAAW,KAAKK,CAAU,EAE/BA,CACT,CAAC,CACL,CACF"}