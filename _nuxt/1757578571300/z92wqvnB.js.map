{"version":3,"file":"z92wqvnB.js","sources":["../../../../app/composables/use-breakpoints-limit.ts","../../../../app/services/resources/navigation-menu.ts","../../../../app/services/header.ts"],"sourcesContent":["import type { ComputedRef } from \"vue\";\nimport type { IUseListLimitBreakpoints } from \"./use-list\";\nimport { breakpointsTailwind, useBreakpoints } from \"@vueuse/core\";\n\nconst customBreakpoints = {\n  \"3xl\": 2560,\n  \"4xl\": 3440,\n  \"5xl\": 3840,\n};\n\nconst breakpoints = useBreakpoints({ ...breakpointsTailwind, ...customBreakpoints });\nconst sm = breakpoints.smaller(\"sm\");\nconst md = breakpoints.between(\"sm\", \"md\");\nconst lg = breakpoints.between(\"md\", \"lg\");\nconst xl = breakpoints.between(\"lg\", \"xl\");\nconst xl2 = breakpoints.between(\"xl\", \"2xl\");\nconst xl3 = breakpoints.between(\"2xl\", \"3xl\");\nconst xl4 = breakpoints.between(\"3xl\", \"4xl\");\nconst xl5 = breakpoints.between(\"4xl\", \"5xl\");\nconst xl6 = breakpoints[\"5xl\"];\n\nconst defaultBreakpoints = { sm: 2, md: 4, lg: 4, xl: 8, xl2: 8, xl3: 10, xl4: 12, xl5: 16, xl6: 20 };\n\nexport default function useBreakpointsLimit(bp: IUseListLimitBreakpoints = defaultBreakpoints): ComputedRef<number> {\n  return computed(() => {\n    if (sm.value && \"sm\" in bp)\n      return bp.sm;\n    if (md.value && \"md\" in bp)\n      return bp.md;\n    if (lg.value && \"lg\" in bp)\n      return bp.lg;\n    if (xl.value && \"xl\" in bp)\n      return bp.xl;\n    if (xl2.value && \"xl2\" in bp)\n      return bp.xl2;\n    if (xl3.value && \"xl3\" in bp)\n      return bp.xl3;\n    if (xl4.value && \"xl4\" in bp)\n      return bp.xl4;\n    if (xl5.value && \"xl5\" in bp)\n      return bp.xl5;\n    if (xl6.value && \"xl6\" in bp)\n      return bp.xl6;\n    return 10;\n  });\n}\n","import useRequest from \"~/composables/use-request\";\nimport { ORDER, SORT } from \"~/constants\";\nimport { formatPaginatedResponseItems } from \"../format\";\n\nconst formatNavigationMenu = (data: IResponseNavigationMenu) => {\n  const appConfig = useRuntimeConfig().public;\n  const isEnableShortName = appConfig.APP_CUSTOMER?.enable_teams_short_name;\n\n  return {\n    id: data._id,\n    title: data.title,\n    teams: data.teams.map(team => ({ ...team, title: isEnableShortName && team.shortTitle ? team.shortTitle : team.title })),\n  };\n};\n\nconst NavigationMenuAPI = {\n  load(options?: IRequestPaginatedParams) {\n    const { request } = useRequest();\n\n    const defaultParams = {\n      page: 0,\n      size: 50,\n      order: ORDER.asc,\n      sort: SORT.order,\n    };\n\n    const params = Object.assign({}, defaultParams, options);\n\n    return request\n      .get<IPaginatedResponse<IResponseNavigationMenu>>(\"/api/resources/navigation_menu\", { query: params })\n      .then(response => formatPaginatedResponseItems(response, formatNavigationMenu));\n  },\n};\nexport default NavigationMenuAPI;\n","import useBreakpointsLimit from \"~/composables/use-breakpoints-limit\";\nimport { ORDER, SORT } from \"~/constants\";\nimport CategoriesAPI from \"~/services/categories\";\nimport EventsAPI from \"./events\";\nimport NavigationMenuAPI from \"./resources/navigation-menu\";\n\nconst appConfig = useRuntimeConfig().public;\nconst useLimit = useBreakpointsLimit({ sm: 6, md: 6, lg: 8, xl: 12, xl2: 12, xl3: 16, xl4: 22, xl5: 16, xl6: 16 });\nconst isLeagueView = appConfig.APP_CUSTOMER.enable_leagues_view;\n\nconst categoryLinkPath = (id: string) => `/category/${id}`;\nconst leagueLinkPath = (id: string) => `/league/${id}`;\nconst teamLinkPath = (id: string) => `/team/${id}`;\n\nconst formatLink = (options: { id: string; title: string; imageUrl?: string; href?: string }): IHeaderLink => {\n  const path = options.href || (isLeagueView ? leagueLinkPath(options.id) : categoryLinkPath(options.id));\n\n  return {\n    id: options.id,\n    title: options.title,\n    imageUrl: options.imageUrl,\n    href: path,\n  };\n};\n\nconst formatLeagueLink = (options: { id: string; title: string; href?: string; sublinks: any[] }) => {\n  const links = formatLink({ id: options.id, title: options.title, href: options.href });\n\n  links.subLinks = options.sublinks\n    .slice(0, useLimit.value)\n    .sort((a, b) => a.title.localeCompare(b.title))\n    .map((subLink) => {\n      return formatLink({ id: subLink._id, title: subLink.title, imageUrl: subLink.logo, href: teamLinkPath(subLink._id) });\n    });\n\n  links.hasMore = options.sublinks.length > useLimit.value;\n\n  return links;\n};\n\nconst isChannelLink = (href: string) => href.includes(\"/channels/\");\nconst getChannelId = (href: string) => href.split(\"/channels/\")[1].replace(\"/\", \"\");\n\nconst getAvailableChannelLinks = async (channelLinks: Link[]) => {\n  if (!channelLinks.length)\n    return [];\n\n  const channelIds = channelLinks.map(link => getChannelId(link.url));\n  let availableChannelIds = new Set<string>();\n\n  try {\n    const response = await EventsAPI.load({\n      eventId: channelIds.join(\",\"),\n      type: \"channel\",\n    });\n    availableChannelIds = new Set(\n      response.content.entries\n        .filter(event => event.isEventAvailableInUserRegion)\n        .map(event => event.id),\n    );\n  }\n  catch (err) {\n    console.error(\"Error checking channel availability:\", err);\n  }\n\n  return channelLinks\n    .filter(link => availableChannelIds.has(getChannelId(link.url)))\n    .map(link => ({\n      id: link.title,\n      title: link.title,\n      href: link.url,\n    }));\n};\n\nconst HeaderAPI = {\n  async load() {\n    const customHeaderLinks = appConfig.APP_CUSTOMER.header_links as unknown as Link[] || [];\n    const cache = useSessionStorage<IHeaderLink[]>(`${appConfig.APP_CUSTOMER.name_short}-links`, []);\n    let links: IHeaderLink[] = [];\n\n    const archivedLink = {\n      id: \"archive\",\n      title: \"Archive\",\n      href: \"/archive/\",\n      subLinks: [] as IHeaderLink[],\n    };\n\n    const channelLinks = customHeaderLinks.filter(link => isChannelLink(link.url));\n    const nonChannelLinks = customHeaderLinks.filter(link => !isChannelLink(link.url));\n\n    const processedNonChannelLinks = nonChannelLinks.map(link => ({\n      id: link.title,\n      title: link.title,\n      href: link.url,\n    }));\n\n    const processedChannelLinks = await getAvailableChannelLinks(channelLinks);\n\n    const customLinks = [\n      ...processedChannelLinks,\n      ...processedNonChannelLinks,\n    ];\n\n    if (cache.value && cache.value.length) {\n      links = [...cache.value];\n    }\n    else {\n      if (isLeagueView) {\n        links = await HeaderAPI.loadLeagueLinks();\n        archivedLink.subLinks = await HeaderAPI.loadArchivedLeague();\n      }\n      else {\n        links = await HeaderAPI.loadCategoryLinks();\n      }\n\n      if (customLinks.length > 0)\n        links.unshift(...customLinks);\n\n      if (archivedLink.subLinks.length > 0)\n        links.push(archivedLink);\n\n      cache.value = links;\n    }\n\n    return links;\n  },\n\n  loadCategoryLinks(): Promise<IHeaderLink[]> {\n    return CategoriesAPI\n      .load({ page: 0, pageSize: 50, order: ORDER.asc, sort: SORT.order })\n      .then(response => response.content.entries)\n      .then(categories => categories.map(category => formatLink({ id: category.id, title: category.title })))\n      .catch((err) => {\n        console.error(err);\n        return [] as IHeaderLink[];\n      });\n  },\n\n  loadLeagueLinks(): Promise<IHeaderLink[]> {\n    return NavigationMenuAPI\n      .load()\n      .then(response => response.content.entries)\n      .then(leagues => leagues.map(league => formatLeagueLink({ id: league.id, title: league.title, sublinks: league.teams })))\n      .catch((err) => {\n        console.error(err);\n        return [] as IHeaderLink[];\n      });\n  },\n\n  loadArchivedLeague(): Promise<IHeaderLink[]> {\n    return CategoriesAPI\n      .load({\n        archived: true,\n        page: 0,\n        pageSize: useLimit.value,\n        order: ORDER.asc,\n        sort: SORT.order,\n      })\n      .then(response => response.content.entries)\n      .then(archivedLeague => archivedLeague.map((league) => {\n        return formatLink({\n          id: league.id,\n          title: league.title,\n          imageUrl: league.imageUrl,\n          href: `/league/${league.id}`,\n        });\n      }))\n      .catch((err) => {\n        console.error(err);\n        return [] as IHeaderLink[];\n      });\n  },\n\n  clearCachedLinks() {\n    const cache = useSessionStorage<IHeaderLink[]>(`${appConfig.APP_CUSTOMER.name_short}-links`, []);\n    cache.value = [];\n  },\n};\n\nexport default HeaderAPI;\n"],"names":["customBreakpoints","breakpoints","useBreakpoints","breakpointsTailwind","sm","md","lg","xl","xl2","xl3","xl4","xl5","xl6","defaultBreakpoints","useBreakpointsLimit","bp","computed","formatNavigationMenu","data","isEnableShortName","useRuntimeConfig","team","NavigationMenuAPI","options","request","useRequest","defaultParams","ORDER","SORT","params","response","formatPaginatedResponseItems","appConfig","useLimit","isLeagueView","categoryLinkPath","id","leagueLinkPath","teamLinkPath","formatLink","path","formatLeagueLink","links","a","b","subLink","isChannelLink","href","getChannelId","getAvailableChannelLinks","channelLinks","channelIds","link","availableChannelIds","EventsAPI","event","err","HeaderAPI","customHeaderLinks","cache","useSessionStorage","archivedLink","processedNonChannelLinks","customLinks","CategoriesAPI","categories","category","leagues","league","archivedLeague"],"mappings":"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"}