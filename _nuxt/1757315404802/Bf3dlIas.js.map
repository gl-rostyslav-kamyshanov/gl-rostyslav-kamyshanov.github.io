{"version":3,"file":"Bf3dlIas.js","sources":["../../../../app/utils/subscription.ts"],"sourcesContent":["import { COMMERCE_TYPE } from \"~/constants\";\nimport formatDate from \"~/utils/format-date\";\n\nenum TIME_UNIT {\n  HOUR = \"hour\",\n  DAY = \"day\",\n  WEEK = \"week\",\n  MONTH = \"month\",\n  YEAR = \"year\",\n}\n\nexport const getReleaseDateTitle = (startDate: number) => {\n  if (startDate && new Date(startDate) > new Date())\n    return formatDate(startDate, \"d.L.yyyy\");\n};\n\nexport const getAccessLabels = (type: string): IModelAccessLabels => {\n  const { t } = useI18n();\n\n  const title = type === COMMERCE_TYPE.SVOD\n    ? t(\"pages.account_subscription.label_full_access\")\n    : t(\"pages.account_subscription.label_limited_access\");\n\n  const description = type === COMMERCE_TYPE.SVOD\n    ? t(\"pages.account_subscription.label_full_access_description\")\n    : t(\"pages.account_subscription.label_limited_access_description\");\n\n  return { title, description };\n};\n\nexport const getDurationUnitsTitle = (total: number, unit: string) => {\n  const { t } = useI18n();\n  const plural = total > 1 ? 2 : 1;\n\n  switch (unit) {\n    case TIME_UNIT.HOUR:\n      return t(\"labels.hours\", plural);\n    case TIME_UNIT.DAY:\n      return t(\"labels.days\", plural);\n    case TIME_UNIT.WEEK:\n      return t(\"labels.weeks\", plural);\n    case TIME_UNIT.MONTH:\n      return t(\"labels.months\", plural);\n    case TIME_UNIT.YEAR:\n      return t(\"labels.years\", plural);\n    default:\n      return \"\";\n  }\n};\n\nexport const calculateDate = (count: number, unit: string) => {\n  const expiryDate = new Date();\n\n  switch (unit) {\n    case TIME_UNIT.HOUR:\n      return expiryDate.setHours(expiryDate.getHours() + count);\n    case TIME_UNIT.DAY:\n      return expiryDate.setDate(expiryDate.getDate() + count);\n    case TIME_UNIT.WEEK:\n      return expiryDate.setDate(expiryDate.getDate() + (count * 7));\n    case TIME_UNIT.MONTH:\n      return expiryDate.setMonth(expiryDate.getMonth() + count);\n    case TIME_UNIT.YEAR:\n      return expiryDate.setFullYear(expiryDate.getFullYear() + count);\n    default:\n      return \"\";\n  }\n};\n\nexport const getDurationLabel = (subscription: IModelCommerce): string => {\n  const { t } = useI18n();\n  const { duration, durationUnits, endDate, autoRenew } = subscription;\n  const type = autoRenew ? \"durationRenew\" : \"duration\";\n\n  if (duration && durationUnits)\n    return t(`labels.${type}`, { duration, units: getDurationUnitsTitle(duration, durationUnits) });\n  else if (endDate)\n    return t(`labels.${type}`, { duration: formatDate(endDate, \"d.L.yyyy\") }, 0);\n\n  return \"N/A\";\n};\n\nexport const getExpirationDate = (subscription: IModelCommerce) => {\n  const { t } = useI18n();\n  const { duration, durationUnits, endDate, autoRenew } = subscription;\n  const type = autoRenew ? \"renew_subscription_expires\" : \"subscription_expires\";\n\n  if (duration && durationUnits)\n    return t(`pages.account_subscription.${type}`, { date: formatDate(calculateDate(duration, durationUnits), \"d.L.yyyy\") });\n  else if (endDate)\n    return t(`pages.account_subscription.${type}`, { date: formatDate(endDate, \"d.L.yyyy\") });\n\n  return \"N/A\";\n};\n\nexport const getPriceLabel = (price: number, currency: string) => {\n  const runtimeConfig = useRuntimeConfig().public;\n  const currencyFormat = runtimeConfig.APP_CUSTOMER.currency_format;\n  if (currencyFormat === \"ltr\")\n    return `${currency} ${price}`;\n\n  return `${price} ${currency}`;\n};\n"],"names":["getReleaseDateTitle","startDate","formatDate","getAccessLabels","type","t","useI18n","title","COMMERCE_TYPE","description","getDurationUnitsTitle","total","unit","plural","calculateDate","count","expiryDate","getDurationLabel","subscription","duration","durationUnits","endDate","autoRenew","getExpirationDate","getPriceLabel","price","currency","useRuntimeConfig"],"mappings":"mFAWO,MAAMA,EAAuBC,GAAsB,CACxD,GAAIA,GAAa,IAAI,KAAKA,CAAS,MAAQ,KACzC,OAAOC,EAAWD,EAAW,UAAU,CAC3C,EAEaE,EAAmBC,GAAqC,CACnE,KAAM,CAAE,EAAAC,CAAA,EAAMC,EAAA,EAERC,EAAQH,IAASI,EAAc,KACjCH,EAAE,8CAA8C,EAChDA,EAAE,iDAAiD,EAEjDI,EAAcL,IAASI,EAAc,KACvCH,EAAE,0DAA0D,EAC5DA,EAAE,6DAA6D,EAEnE,MAAO,CAAE,MAAAE,EAAO,YAAAE,CAAA,CAClB,EAEaC,EAAwB,CAACC,EAAeC,IAAiB,CACpE,KAAM,CAAE,EAAAP,CAAA,EAAMC,EAAA,EACRO,EAASF,EAAQ,EAAI,EAAI,EAE/B,OAAQC,EAAA,CACN,IAAK,OACH,OAAOP,EAAE,eAAgBQ,CAAM,EACjC,IAAK,MACH,OAAOR,EAAE,cAAeQ,CAAM,EAChC,IAAK,OACH,OAAOR,EAAE,eAAgBQ,CAAM,EACjC,IAAK,QACH,OAAOR,EAAE,gBAAiBQ,CAAM,EAClC,IAAK,OACH,OAAOR,EAAE,eAAgBQ,CAAM,EACjC,QACE,MAAO,EAAA,CAEb,EAEaC,EAAgB,CAACC,EAAeH,IAAiB,CAC5D,MAAMI,MAAiB,KAEvB,OAAQJ,EAAA,CACN,IAAK,OACH,OAAOI,EAAW,SAASA,EAAW,SAAA,EAAaD,CAAK,EAC1D,IAAK,MACH,OAAOC,EAAW,QAAQA,EAAW,QAAA,EAAYD,CAAK,EACxD,IAAK,OACH,OAAOC,EAAW,QAAQA,EAAW,QAAA,EAAaD,EAAQ,CAAE,EAC9D,IAAK,QACH,OAAOC,EAAW,SAASA,EAAW,SAAA,EAAaD,CAAK,EAC1D,IAAK,OACH,OAAOC,EAAW,YAAYA,EAAW,YAAA,EAAgBD,CAAK,EAChE,QACE,MAAO,EAAA,CAEb,EAEaE,EAAoBC,GAAyC,CACxE,KAAM,CAAE,EAAAb,CAAA,EAAMC,EAAA,EACR,CAAE,SAAAa,EAAU,cAAAC,EAAe,QAAAC,EAAS,UAAAC,GAAcJ,EAClDd,EAAOkB,EAAY,gBAAkB,WAE3C,OAAIH,GAAYC,EACPf,EAAE,UAAUD,CAAI,GAAI,CAAE,SAAAe,EAAU,MAAOT,EAAsBS,EAAUC,CAAa,CAAA,CAAG,EACvFC,EACAhB,EAAE,UAAUD,CAAI,GAAI,CAAE,SAAUF,EAAWmB,EAAS,UAAU,CAAA,EAAK,CAAC,EAEtE,KACT,EAEaE,EAAqBL,GAAiC,CACjE,KAAM,CAAE,EAAAb,CAAA,EAAMC,EAAA,EACR,CAAE,SAAAa,EAAU,cAAAC,EAAe,QAAAC,EAAS,UAAAC,GAAcJ,EAClDd,EAAOkB,EAAY,6BAA+B,uBAExD,OAAIH,GAAYC,EACPf,EAAE,8BAA8BD,CAAI,GAAI,CAAE,KAAMF,EAAWY,EAAcK,EAAUC,CAAa,EAAG,UAAU,EAAG,EAChHC,EACAhB,EAAE,8BAA8BD,CAAI,GAAI,CAAE,KAAMF,EAAWmB,EAAS,UAAU,EAAG,EAEnF,KACT,EAEaG,EAAgB,CAACC,EAAeC,IACrBC,IAAmB,OACJ,aAAa,kBAC3B,MACd,GAAGD,CAAQ,IAAID,CAAK,GAEtB,GAAGA,CAAK,IAAIC,CAAQ"}