{"version":3,"file":"DyTyZduF.js","sources":["../../../../app/components/Base/Select.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport BaseInput from \"./Input.vue\";\n\nexport type BaseSelectOption = string | number | Record<string, any>;\n\nexport interface BaseSelectProps {\n  /**\n   * Defines if input is disabled or not.\n   */\n  disabled?: boolean;\n  /**\n   * Defines if input value is invalid(has some form error).\n   */\n  hasError?: boolean;\n  /**\n   * Defines error message for input with error(consider `hasError: true`).\n   */\n  errorMessage?: string;\n  /**\n   * Defines the label value of the input.\n   */\n  label?: string;\n  /**\n   * Required. Used to create id's for the input/label.\n   */\n  name: string;\n  /**\n   * Default to v-model.\n   *\n   * Note: when `multiple` option is enabled - the modelValue should be an array.\n   */\n  modelValue?: null | BaseSelectOption | BaseSelectOption[];\n  /**\n   * Defines input's placeholder value.\n   */\n  placeholder?: string;\n  /**\n   * Defines search input's placeholder value.\n   */\n  searchPlaceholder?: string;\n  /**\n   * Defines class that will be applied to the root element.\n   */\n  rootClass?: string;\n  /**\n   * Defines the dropdown options.\n   *\n   * Should be an array of objects.\n   */\n  options?: BaseSelectOption[];\n  /**\n   * Defines the class that will be applied to the every option in the dropdown\n   */\n  optionsItemClass?: string;\n  /**\n   * Defines a key of the options object to be used as a title.\n   *\n   * Defaults to `title`.\n   */\n  optionsKeyTitle?: string;\n  /**\n   * Defines a key of the options object to be used as a value.\n   *\n   * Defaults to `value`.\n   * **Should be unique!**\n   */\n  optionsKeyValue?: string;\n  /**\n   * Defines if the search input for options should be shown.\n   */\n  hasSearch?: boolean;\n  /**\n   * If set to - will emit to the `v-model` only option value selected by `option[props.emittedKey]` instead of full object.\n   */\n  emittedKey?: string;\n  /**\n   * Allows to select multiple values from the list of options.\n   */\n  multiple?: boolean;\n  /**\n   * If set to `true` - the inner input will be empty when the option is selected.\n   */\n  optionsClass?: string;\n  hasEmptyInput?: boolean;\n  hasOptionTitle?: boolean;\n  readonly?: boolean;\n}\nconst { t } = useI18n();\nconst emit = defineEmits([\"update:modelValue\", \"select\"]);\nconst props = withDefaults(defineProps<BaseSelectProps>(), {\n  optionsKeyTitle: \"title\",\n  optionsKeyValue: \"value\",\n  hasOptionTitle: true,\n  readonly: true,\n});\n\nconst defaultSearchPlaceholder = computed(\n  () => props.searchPlaceholder || t(\"labels.search\"),\n);\nconst innerSearchEl = ref<InstanceType<typeof BaseInput> | null>(null);\nconst searchValue = ref<string>(\"\");\nconst isSelectExpanded = ref(false);\nconst selectElRef = ref(null);\nconst isPrimitive = (option: BaseSelectOption): option is string | number => {\n  return typeof option == \"string\" || typeof option == \"number\";\n};\nfunction isBaseOptionSelected(\n  option: BaseSelectOption,\n  selected?: null | BaseSelectOption | BaseSelectOption[],\n  selectByKey?: string,\n): boolean {\n  if (!selected || (Array.isArray(selected) && !selected.length))\n    return false;\n\n  // primitive\n  if (isPrimitive(option) && isPrimitive(selected))\n    return selected === option;\n\n  // multiple\n  if (Array.isArray(selected)) {\n    if (isPrimitive(option)) {\n      return false;\n    }\n    else if (selectByKey) {\n      return Boolean(\n        selected.find((item) => {\n          if (isPrimitive(item))\n            return option[selectByKey] === item;\n\n          return option[selectByKey] === item[selectByKey];\n        }),\n      );\n    }\n\n    return false;\n  }\n\n  if (!selectByKey)\n    return false; // No check by objects if `selectByKey` does not specified\n\n  // single non primitive\n  if (!isPrimitive(option) && !isPrimitive(selected))\n    return selected[selectByKey] === option[selectByKey];\n  else if (isPrimitive(option) && !isPrimitive(selected))\n    return selected[selectByKey] === option;\n  else if (!isPrimitive(option) && isPrimitive(selected))\n    return selected === option[selectByKey];\n\n  return false;\n}\n\nfunction excludeFromArray(arr: BaseSelectOption[], option: BaseSelectOption, selectByKey?: string): BaseSelectOption[] {\n  return arr.filter((item: BaseSelectOption) => {\n    // primitive\n    if (isPrimitive(option) && isPrimitive(item))\n      return item !== option;\n\n    if (!selectByKey)\n      return true; // No check by objects if `selectByKey` does not specified\n\n    // single non primitive\n    if (!isPrimitive(option) && !isPrimitive(item))\n      return item[selectByKey] !== option[selectByKey];\n    else if (isPrimitive(option) && !isPrimitive(item))\n      return item[selectByKey] !== option;\n    else if (!isPrimitive(option) && isPrimitive(item))\n      return item !== option[selectByKey];\n\n    return true;\n  });\n}\n\nfunction searchByOptions(options: BaseSelectOption[], searchValue?: string, searchKey?: string): BaseSelectOption[] {\n  if (!searchValue)\n    return options;\n\n  const searchFilter = (title: string | number) => `${title}`.toLowerCase().includes(searchValue?.toLowerCase().trim());\n\n  if (searchKey)\n    return options.filter(option => searchFilter((option as Record<string, any>)[searchKey]));\n\n  return options.filter((option) => {\n    if (isPrimitive(option)) {\n      return searchFilter(option);\n    }\n    else {\n      // No search by objects if `searchKey` does not specified\n      return options;\n    }\n  });\n}\nconst options = computed(() =>\n  searchByOptions(props.options || [], searchValue.value, props.optionsKeyTitle),\n);\nconst isOptionSelected = (option: BaseSelectOption) =>\n  isBaseOptionSelected(\n    option,\n    props.modelValue,\n    props.emittedKey || props.optionsKeyValue,\n  );\nconst getEmittedValue = (option: BaseSelectOption) =>\n  props.emittedKey\n    ? isPrimitive(option)\n      ? option\n      : option[props.emittedKey]\n    : option;\nconst getOptionKey = (option: BaseSelectOption) => {\n  return isPrimitive(option) ? option : option[props.optionsKeyValue];\n};\nconst getOptionTitle = (option: BaseSelectOption | BaseSelectOption[]) => {\n  if (Array.isArray(option))\n    return isPrimitive(option[0]) ? option.join(\", \") : JSON.stringify(option);\n\n  return isPrimitive(option) ? option : option[props.optionsKeyTitle];\n};\nconst onUpdateValue = (value?: BaseSelectOption) =>\n  emit(\"update:modelValue\", value);\nconst onSelectOpen = () => {\n  isSelectExpanded.value = true;\n  nextTick(() => innerSearchEl.value && innerSearchEl.value.focus());\n};\nconst onSelectClose = () => (isSelectExpanded.value = false);\nconst clearSearch = () => (searchValue.value = \"\");\nconst onSelectToggle = () => (isSelectExpanded.value = !isSelectExpanded.value);\nconst onOptionClick = (option: BaseSelectOption) => {\n  const value = getEmittedValue(option);\n  emit(\"select\", option);\n\n  if (props.multiple) {\n    if (!Array.isArray(props.modelValue)) {\n      console.error(\n        \"Invalid `modelValue`! When `multiple` prop set - must be an array!\",\n      );\n      return;\n    }\n\n    const modelValue = Array.isArray(props.modelValue) ? props.modelValue : [];\n\n    if (isOptionSelected(option)) {\n      const newModelValue = excludeFromArray(\n        modelValue,\n        option,\n        props.emittedKey || props.optionsKeyValue,\n      );\n      onUpdateValue(newModelValue);\n    }\n    else {\n      onUpdateValue([...modelValue, value]);\n    }\n  }\n  else {\n    if (isOptionSelected(option)) {\n      onUpdateValue(undefined);\n    }\n    else {\n      onUpdateValue(value);\n    }\n    onSelectClose();\n  }\n};\n\nconst selectedOption = computed(() => {\n  if (props.multiple) {\n    return (props.options || []).reduce((acc: BaseSelectOption[], option) => {\n      if (isOptionSelected(option))\n        acc.push(option);\n\n      return acc;\n    }, []);\n  }\n  return (props.options || []).find(isOptionSelected);\n});\nonClickOutside(selectElRef, () => onSelectClose());\n// TODO: Improve a11y for select options\n</script>\n\n<script lang=\"ts\">\nexport default {\n  inheritAttrs: false,\n};\n</script>\n\n<template>\n  <div ref=\"selectElRef\" class=\"baseSelect\" :class=\"props.rootClass\">\n    <slot\n      name=\"toggle\"\n      :open=\"onSelectOpen\"\n      :close=\"onSelectClose\"\n      :toggle=\"onSelectToggle\"\n      :is-open=\"isSelectExpanded\"\n      :is-selected=\"Array.isArray(selectedOption) ? selectedOption.length > 0 : !!selectedOption\"\n      :value=\"props.modelValue\"\n    >\n      <BaseInput\n        v-bind=\"$attrs\"\n        :model-value=\"\n          props.hasEmptyInput\n            ? ''\n            : selectedOption && getOptionTitle(selectedOption)\n        \"\n        :name=\"props.name\"\n        :label=\"props.label\"\n        type=\"text\"\n        class=\"truncate\"\n        :disabled=\"props.disabled\"\n        :placeholder=\"props.placeholder\"\n        :has-error=\"props.hasError\"\n        :error-message=\"props.errorMessage\"\n        :readonly=\"props.readonly\"\n        @focus=\"onSelectOpen()\"\n      >\n        <template #prefix>\n          <slot name=\"innerInputPrefix\" :toggle=\"onSelectToggle\" />\n        </template>\n        <template #input>\n          <slot\n            name=\"innerInput\" :toggle=\"onSelectToggle\" :value=\"props.hasEmptyInput\n              ? ''\n              : selectedOption && getOptionTitle(selectedOption)\n            \"\n          />\n        </template>\n        <template #suffix>\n          <slot name=\"innerInputSuffix\" :toggle=\"onSelectToggle\" />\n\n          <BaseButton\n            type=\"icon\"\n            attr-type=\"button\"\n            name=\"baseSelect__toggle\"\n            class=\"baseInput__suffix\"\n            title=\"Toggle\"\n            :disabled=\"props.disabled\"\n            :aria-expanded=\"isSelectExpanded\"\n            aria-haspopup=\"listbox\"\n            @click.prevent=\"onSelectToggle()\"\n          >\n            <IconChevronDown class=\"inline-block text-main\" />\n          </BaseButton>\n        </template>\n      </BaseInput>\n    </slot>\n\n    <div v-if=\"isSelectExpanded\" v-motion-slide-top class=\"baseSelect__options\" :class=\"props.optionsClass\">\n      <div v-if=\"props.hasSearch\">\n        <BaseInput\n          ref=\"innerSearchEl\"\n          v-model=\"searchValue\"\n          name=\"search\"\n          class=\"font-medium\"\n          :placeholder=\"defaultSearchPlaceholder\"\n          search\n          @clear=\"clearSearch()\"\n        />\n        <div\n          role=\"separator\"\n          class=\"hr\"\n          style=\"background: var(--base-background-color)\"\n        />\n      </div>\n      <ul\n        :name=\"`listbox-${props.name}`\"\n        :aria-labelledby=\"`input-label-${props.name}`\"\n        class=\"baseSelect__list\"\n        role=\"listbox\"\n        tabindex=\"0\"\n        @blur=\"onSelectClose()\"\n        @keyup.esc=\"onSelectClose()\"\n      >\n        <!-- TODO: Improve UI -->\n        <li\n          v-if=\"!options || !options.length\"\n          role=\"option\"\n          class=\"baseSelect__listOption\"\n        >\n          <span>{{ t('labels.no_options_found') }}</span>\n        </li>\n        <slot\n          v-for=\"(option, index) in options\"\n          :key=\"getOptionKey(option)\"\n          name=\"option-item-inner\"\n          :option=\"option\"\n          :is-selected=\"isOptionSelected(option)\"\n          :select=\"onOptionClick\"\n        >\n          <li\n            role=\"option\"\n            :data-test-id=\"`${name}-option-${index}`\"\n            class=\"baseSelect__listOption\"\n            :class=\"[\n              props.optionsItemClass,\n              { baseSelect__listOption_selected: isOptionSelected(option) },\n            ]\"\n            :aria-selected=\"isOptionSelected(option) ? 'true' : 'false'\"\n            @click=\"onOptionClick(option)\"\n          >\n            <div>\n              <slot\n                :key=\"getOptionKey(option)\"\n                name=\"option-item-inner-prefix\"\n                :option=\"option\"\n              />\n              <span v-if=\"props.hasOptionTitle\">{{\n                getOptionTitle(option)\n              }}</span>\n            </div>\n            <IconCheck v-if=\"isOptionSelected(option)\" />\n          </li>\n          <li\n            role=\"separator\"\n            class=\"hr mx-4\"\n            style=\"background: var(--base-background-color)\"\n          />\n        </slot>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n//FIXME:\n.baseSelect {\n  @apply relative;\n\n  .baseSelect__options {\n    @apply absolute z-50 m-0 mt-1 min-w-max w-full rounded float-left shadow-lg bg-clip-padding;\n\n    background-color: var(--base-card-bgColor);\n\n    &.baseSelect__options_open {\n      @apply block;\n    }\n  }\n\n  .baseSelect__list {\n    @apply block list-none text-base text-left max-h-80 overflow-auto rounded-b;\n\n    color: var(--base-text-color);\n    background-color: var(--base-card-bgColor);\n    box-shadow: var(--base-box-shadow);\n  }\n\n  .baseSelect__listOption {\n    @apply px-4 py-[1.125rem] text-xs sm:text-base cursor-pointer flex items-center justify-between;\n\n    &:hover,\n    &.baseSelect__listOption_selected {\n      background-color: var(--base-category-chip-bgColor);\n    }\n  }\n}\n</style>\n"],"names":["__default__","t","useI18n","emit","__emit","props","__props","defaultSearchPlaceholder","computed","innerSearchEl","ref","searchValue","isSelectExpanded","selectElRef","isPrimitive","option","isBaseOptionSelected","selected","selectByKey","item","excludeFromArray","arr","searchByOptions","options","searchKey","searchFilter","title","isOptionSelected","getEmittedValue","getOptionKey","getOptionTitle","onUpdateValue","value","onSelectOpen","nextTick","onSelectClose","clearSearch","onSelectToggle","onOptionClick","modelValue","newModelValue","selectedOption","acc","onClickOutside","_createElementBlock","_normalizeClass","_renderSlot","_ctx","_unref","_createVNode","BaseInput","_mergeProps","_component_BaseButton","_component_IconChevronDown","_hoisted_1","$event","_createElementVNode","_openBlock","_hoisted_3","_Fragment","_renderList","index","name","_hoisted_5","_toDisplayString","_createBlock","_component_IconCheck"],"mappings":"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"}