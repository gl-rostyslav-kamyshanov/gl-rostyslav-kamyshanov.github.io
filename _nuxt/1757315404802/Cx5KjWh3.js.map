{"version":3,"file":"Cx5KjWh3.js","sources":["../../../../app/components/Channel/DayNavigation.vue","../../../../app/components/Icon/NoBroadcast.vue","../../../../app/components/Channel/ProgramList.vue","../../../../app/components/Event/ChannelProgram.vue","../../../../app/utils/linear-program.ts","../../../../app/components/Event/PlayerWithProgram.vue","../../../../app/composables/use-channel-program.ts","../../../../app/composables/use-day-navigation.ts","../../../../app/pages/channels/[eventId].vue"],"sourcesContent":["<script setup lang=\"ts\">\ninterface TabItem {\n  key: string;\n  label: string;\n  onClick: () => void;\n}\n\ninterface Props {\n  tabs: TabItem[];\n  activeTab: string;\n  canNavigatePrev: boolean;\n  canNavigateNext: boolean;\n  showNavigation: boolean;\n}\n\ninterface Emits {\n  navigatePrev: [];\n  navigateNext: [];\n}\n\nconst props = defineProps<Props>();\nconst emit = defineEmits<Emits>();\n\nconst { locale } = useI18n();\nconst isRTL = computed(() => locale.value === \"he\");\n\n// Keyboard navigation handlers\nconst handleKeydown = (event: KeyboardEvent, action: \"prev\" | \"next\") => {\n  if (event.key === \"Enter\" || event.key === \" \") {\n    event.preventDefault();\n    if (action === \"prev\" && props.canNavigatePrev) {\n      emit(\"navigatePrev\");\n    }\n    else if (action === \"next\" && props.canNavigateNext) {\n      emit(\"navigateNext\");\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"flex items-center justify-between w-full px-4\" role=\"navigation\" aria-label=\"Day navigation\">\n    <!-- Left Navigation Arrow -->\n    <BaseButton\n      v-if=\"showNavigation\"\n      name=\"arrow-left\"\n      type=\"icon\"\n      class=\"text-main\"\n      :class=\"{ 'opacity-50 cursor-not-allowed': !canNavigatePrev }\"\n      :disabled=\"!canNavigatePrev\"\n      :aria-label=\"isRTL ? 'Next day' : 'Previous day'\"\n      :aria-disabled=\"!canNavigatePrev\"\n      tabindex=\"0\"\n      @click=\"$emit('navigatePrev')\"\n      @keydown=\"handleKeydown($event, 'prev')\"\n    >\n      <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n        <!-- For RTL (Hebrew), flip the arrow direction -->\n        <path\n          v-if=\"isRTL\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M9 5l7 7-7 7\"\n        />\n        <path\n          v-else\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M15 19l-7-7 7-7\"\n        />\n      </svg>\n    </BaseButton>\n\n    <!-- UTabs Component -->\n    <UTabs\n      :tabs=\"tabs\"\n      class=\"w-full\"\n      :active=\"activeTab\"\n      role=\"tablist\"\n      aria-label=\"Day selection tabs\"\n    />\n\n    <!-- Right Navigation Arrow -->\n    <BaseButton\n      v-if=\"showNavigation\"\n      type=\"icon\"\n      class=\"text-main\"\n      name=\"arrow-right\"\n      :class=\"{ 'opacity-50 cursor-not-allowed': !canNavigateNext }\"\n      :disabled=\"!canNavigateNext\"\n      :aria-label=\"isRTL ? 'Previous day' : 'Next day'\"\n      :aria-disabled=\"!canNavigateNext\"\n      tabindex=\"0\"\n      @click=\"$emit('navigateNext')\"\n      @keydown=\"handleKeydown($event, 'next')\"\n    >\n      <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n        <!-- For RTL (Hebrew), flip the arrow direction -->\n        <path\n          v-if=\"isRTL\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M15 19l-7-7 7-7\"\n        />\n        <path\n          v-else\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M9 5l7 7-7 7\"\n        />\n      </svg>\n    </BaseButton>\n  </div>\n</template>\n","<!-- eslint-disable max-len -->\n<script setup lang=\"ts\">\ninterface IconNoBroadcastProps {\n  fill?: string;\n  isDarkTheme?: boolean;\n}\nconst props = withDefaults(defineProps<IconNoBroadcastProps>(), { fill: \"#A9B7D1\" });\n</script>\n\n<template>\n  <template v-if=\"props.isDarkTheme\">\n    <svg width=\"178px\" height=\"156px\" viewBox=\"0 0 119 104\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n      <title>Program empty</title>\n      <g id=\"📍Dark-theme\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Linear-Channel_List-empty\" transform=\"translate(-136, -467)\">\n          <g id=\"score\" transform=\"translate(-28, 396)\">\n            <g id=\"Group-2\" transform=\"translate(88, 71)\">\n              <g id=\"Program-empty\" transform=\"translate(76, 0)\">\n                <g id=\"illustration\" transform=\"translate(0, 72)\">\n                  <g id=\"live-card\" />\n                  <rect id=\"Rectangle\" fill=\"#232f43\" x=\"0\" y=\"0\" width=\"119\" height=\"32\" rx=\"1.76665437\" />\n                  <path id=\"Rectangle\" d=\"M2,0 L24.5,0 L24.5,0 L24.5,32 L2,32 C0.8954305,32 0,31.1045695 0,30 L-2.22044605e-16,2 C-2.22044605e-16,0.8954305 0.8954305,2.22044605e-16 2,0 Z\" fill=\"#2C374B\" />\n                  <g id=\"Group-3\" transform=\"translate(5.25, 7.9169)\">\n                    <rect id=\"Rectangle\" fill=\"#2C374B\" x=\"26.2331443\" y=\"0\" width=\"60.6369427\" height=\"4.46511628\" rx=\"0.883327186\" />\n                    <rect id=\"Rectangle-Copy-2\" fill=\"#232f43\" x=\"0\" y=\"1.86090494\" width=\"14\" height=\"12.4444444\" rx=\"0.883327186\" />\n                    <path id=\"Rectangle-Copy\" d=\"M27.1164715,11.2699013 L60.2160592,11.2699013 C60.7039073,11.2699013 61.0993864,11.6653804 61.0993864,12.1532285 L61.0993864,14.8516904 C61.0993864,15.3395386 60.7039073,15.7350176 60.2160592,15.7350176 L39.287937,15.7350176 L39.287937,15.7350176 L27.1164715,15.7350176 C26.6286234,15.7350176 26.2331443,15.3395386 26.2331443,14.8516904 L26.2331443,12.1532285 C26.2331443,11.6653804 26.6286234,11.2699013 27.1164715,11.2699013 Z\" fill=\"#2C374B\" />\n                  </g>\n                </g>\n                <g id=\"illustration\" transform=\"translate(0, 36)\">\n                  <g id=\"live-card\" />\n                  <rect id=\"Rectangle\" fill=\"#232f43\" x=\"0\" y=\"0\" width=\"119\" height=\"32\" rx=\"1.76665437\" />\n                  <path id=\"Rectangle\" d=\"M2,0 L24.5,0 L24.5,0 L24.5,32 L2,32 C0.8954305,32 0,31.1045695 0,30 L-2.22044605e-16,2 C-2.22044605e-16,0.8954305 0.8954305,2.22044605e-16 2,0 Z\" fill=\"#2C374B\" />\n                  <g id=\"Group-3\" transform=\"translate(5.25, 7.9169)\">\n                    <rect id=\"Rectangle\" fill=\"#2C374B\" x=\"26.2331443\" y=\"0\" width=\"60.6369427\" height=\"4.46511628\" rx=\"0.883327186\" />\n                    <rect id=\"Rectangle-Copy-2\" fill=\"#232f43\" x=\"0\" y=\"1.86090494\" width=\"14\" height=\"12.4444444\" rx=\"0.883327186\" />\n                    <path id=\"Rectangle-Copy\" d=\"M27.1164715,11.2699013 L60.2160592,11.2699013 C60.7039073,11.2699013 61.0993864,11.6653804 61.0993864,12.1532285 L61.0993864,14.8516904 C61.0993864,15.3395386 60.7039073,15.7350176 60.2160592,15.7350176 L39.287937,15.7350176 L39.287937,15.7350176 L27.1164715,15.7350176 C26.6286234,15.7350176 26.2331443,15.3395386 26.2331443,14.8516904 L26.2331443,12.1532285 C26.2331443,11.6653804 26.6286234,11.2699013 27.1164715,11.2699013 Z\" fill=\"#2C374B\" />\n                  </g>\n                </g>\n                <g id=\"illustration\">\n                  <g id=\"live-card\" />\n                  <rect id=\"Rectangle\" fill=\"#232f43\" x=\"0\" y=\"0\" width=\"119\" height=\"32\" rx=\"1.76665437\" />\n                  <path id=\"Rectangle\" d=\"M2,0 L24.5,0 L24.5,0 L24.5,32 L2,32 C0.8954305,32 0,31.1045695 0,30 L-2.22044605e-16,2 C-2.22044605e-16,0.8954305 0.8954305,2.22044605e-16 2,0 Z\" fill=\"#2C374B\" />\n                  <g id=\"Group-3\" transform=\"translate(5.25, 7.9169)\">\n                    <rect id=\"Rectangle\" fill=\"#2C374B\" x=\"26.2331443\" y=\"0\" width=\"60.6369427\" height=\"4.46511628\" rx=\"0.883327186\" />\n                    <rect id=\"Rectangle-Copy-2\" fill=\"#232f43\" x=\"0\" y=\"1.86090494\" width=\"14\" height=\"12.4444444\" rx=\"0.883327186\" />\n                    <path id=\"Rectangle-Copy\" d=\"M27.1164715,11.2699013 L60.2160592,11.2699013 C60.7039073,11.2699013 61.0993864,11.6653804 61.0993864,12.1532285 L61.0993864,14.8516904 C61.0993864,15.3395386 60.7039073,15.7350176 60.2160592,15.7350176 L39.287937,15.7350176 L39.287937,15.7350176 L27.1164715,15.7350176 C26.6286234,15.7350176 26.2331443,15.3395386 26.2331443,14.8516904 L26.2331443,12.1532285 C26.2331443,11.6653804 26.6286234,11.2699013 27.1164715,11.2699013 Z\" fill=\"#2C374B\" />\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  </template>\n  <template v-else>\n    <svg width=\"178px\" height=\"156px\" viewBox=\"0 0 119 104\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n      <title>Group 5</title>\n      <g id=\"📍Light-theme\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <g id=\"Linear-Channel_List-empty_Light\" transform=\"translate(-136, -467)\">\n          <g id=\"score\" transform=\"translate(-28, 396)\">\n            <g id=\"Group-2\" transform=\"translate(88.5, 71)\">\n              <g id=\"Group-5\" transform=\"translate(75.5, 0)\">\n                <g id=\"illustration\">\n                  <g id=\"live-card\" />\n                  <rect id=\"Rectangle\" fill=\"#EEEEEE\" x=\"0\" y=\"0\" width=\"119\" height=\"32\" rx=\"1.76665437\" />\n                  <path id=\"Rectangle\" d=\"M2,0 L24.5,0 L24.5,0 L24.5,32 L2,32 C0.8954305,32 0,31.1045695 0,30 L-2.22044605e-16,2 C-2.22044605e-16,0.8954305 0.8954305,2.22044605e-16 2,0 Z\" fill=\"#E4E3E3\" />\n                  <g id=\"Group-3\" transform=\"translate(5.25, 7.9169)\" fill=\"#BABBBE\">\n                    <rect id=\"Rectangle\" x=\"26.2331443\" y=\"0\" width=\"60.6369427\" height=\"4.46511628\" rx=\"0.883327186\" />\n                    <rect id=\"Rectangle-Copy-2\" x=\"0\" y=\"1.86090494\" width=\"14\" height=\"12.4444444\" rx=\"0.883327186\" />\n                    <path id=\"Rectangle-Copy\" d=\"M27.1164715,11.2699013 L60.2160592,11.2699013 C60.7039073,11.2699013 61.0993864,11.6653804 61.0993864,12.1532285 L61.0993864,14.8516904 C61.0993864,15.3395386 60.7039073,15.7350176 60.2160592,15.7350176 L39.287937,15.7350176 L39.287937,15.7350176 L27.1164715,15.7350176 C26.6286234,15.7350176 26.2331443,15.3395386 26.2331443,14.8516904 L26.2331443,12.1532285 C26.2331443,11.6653804 26.6286234,11.2699013 27.1164715,11.2699013 Z\" />\n                  </g>\n                </g>\n                <g id=\"illustration\" transform=\"translate(0, 36)\">\n                  <g id=\"live-card\" />\n                  <rect id=\"Rectangle\" fill=\"#EEEEEE\" x=\"0\" y=\"0\" width=\"119\" height=\"32\" rx=\"1.76665437\" />\n                  <path id=\"Rectangle\" d=\"M2,0 L24.5,0 L24.5,0 L24.5,32 L2,32 C0.8954305,32 0,31.1045695 0,30 L-2.22044605e-16,2 C-2.22044605e-16,0.8954305 0.8954305,2.22044605e-16 2,0 Z\" fill=\"#E4E3E3\" />\n                  <g id=\"Group-3\" transform=\"translate(5.25, 7.9169)\" fill=\"#BABBBE\">\n                    <rect id=\"Rectangle\" x=\"26.2331443\" y=\"0\" width=\"60.6369427\" height=\"4.46511628\" rx=\"0.883327186\" />\n                    <rect id=\"Rectangle-Copy-2\" x=\"0\" y=\"1.86090494\" width=\"14\" height=\"12.4444444\" rx=\"0.883327186\" />\n                    <path id=\"Rectangle-Copy\" d=\"M27.1164715,11.2699013 L60.2160592,11.2699013 C60.7039073,11.2699013 61.0993864,11.6653804 61.0993864,12.1532285 L61.0993864,14.8516904 C61.0993864,15.3395386 60.7039073,15.7350176 60.2160592,15.7350176 L39.287937,15.7350176 L39.287937,15.7350176 L27.1164715,15.7350176 C26.6286234,15.7350176 26.2331443,15.3395386 26.2331443,14.8516904 L26.2331443,12.1532285 C26.2331443,11.6653804 26.6286234,11.2699013 27.1164715,11.2699013 Z\" />\n                  </g>\n                </g>\n                <g id=\"illustration\" transform=\"translate(0, 72)\">\n                  <g id=\"live-card\" />\n                  <rect id=\"Rectangle\" fill=\"#EEEEEE\" x=\"0\" y=\"0\" width=\"119\" height=\"32\" rx=\"1.76665437\" />\n                  <path id=\"Rectangle\" d=\"M2,0 L24.5,0 L24.5,0 L24.5,32 L2,32 C0.8954305,32 0,31.1045695 0,30 L-2.22044605e-16,2 C-2.22044605e-16,0.8954305 0.8954305,2.22044605e-16 2,0 Z\" fill=\"#E4E3E3\" />\n                  <g id=\"Group-3\" transform=\"translate(5.25, 7.9169)\" fill=\"#BABBBE\">\n                    <rect id=\"Rectangle\" x=\"26.2331443\" y=\"0\" width=\"60.6369427\" height=\"4.46511628\" rx=\"0.883327186\" />\n                    <rect id=\"Rectangle-Copy-2\" x=\"0\" y=\"1.86090494\" width=\"14\" height=\"12.4444444\" rx=\"0.883327186\" />\n                    <path id=\"Rectangle-Copy\" d=\"M27.1164715,11.2699013 L60.2160592,11.2699013 C60.7039073,11.2699013 61.0993864,11.6653804 61.0993864,12.1532285 L61.0993864,14.8516904 C61.0993864,15.3395386 60.7039073,15.7350176 60.2160592,15.7350176 L39.287937,15.7350176 L39.287937,15.7350176 L27.1164715,15.7350176 C26.6286234,15.7350176 26.2331443,15.3395386 26.2331443,14.8516904 L26.2331443,12.1532285 C26.2331443,11.6653804 26.6286234,11.2699013 27.1164715,11.2699013 Z\" />\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </g>\n    </svg>\n  </template>\n</template>\n","<script setup lang=\"ts\">\nimport type { ChannelProgramInterval } from \"~/composables/use-channel-program\";\nimport { THEME_COLOR } from \"~/constants\";\n\ninterface Props {\n  programs: ChannelProgramInterval[\"programs\"];\n  slideDirection: \"left\" | \"right\";\n  dayKey: number;\n  fullDate?: string;\n}\n\nconst { t } = useI18n();\nconst color = useColorMode();\nconst props = defineProps<Props>();\nconst isDarkTheme = computed(() => color.value === THEME_COLOR.DARK);\n</script>\n\n<template>\n  <div class=\"px-4 py-6 overflow-x-hidden overflow-y-auto max-h-[calc(100vh-350px)] sm:max-h-none sm:overflow-y-hidden\">\n    <div v-if=\"props.fullDate\" class=\"text-gray-400 text-sm font-medium pb-2\">\n      {{ props.fullDate }}\n    </div>\n\n    <Transition\n      :name=\"`slide-${props.slideDirection}`\"\n      mode=\"out-in\"\n      appear\n    >\n      <div\n        :key=\"props.dayKey\"\n        class=\"transition-content\"\n      >\n        <!-- Program Items Grid -->\n        <div v-if=\"props.programs.length > 0\" class=\"grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-4 auto-rows-fr\">\n          <div\n            v-for=\"program in props.programs\"\n            :key=\"`${program.time}-${program.title}`\"\n            class=\"h-full\"\n          >\n            <div class=\"w-full flex h-full min-h-[75px]\">\n              <div\n                class=\"flex w-1/4 bg-[var(--base-favorite-club-chip-bgColor)] ltr:rounded-l rtl:rounded-r pt-4 px-4 justify-center text-main font-bold text-lg\"\n              >\n                {{ program.time }}\n              </div>\n              <div class=\"flex w-3/4 bg-[var(--base-countdown-bgColor)] ltr:rounded-r rtl:rounded-l text-main flex-col p-4 gap-2\">\n                <div class=\"text-sm font-medium\">\n                  {{ program.title }}\n                </div>\n                <div class=\"text-secondary text-xs\">\n                  {{ program.description }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- No programs message -->\n        <div v-else class=\"text-center\">\n          <BaseNotFound>\n            <template #icon>\n              <IconNoBroadcast :is-dark-theme=\"isDarkTheme\" />\n            </template>\n            <template #text>\n              <span class=\"text-secondary pt-4\">\n                {{ t(\"labels.no_linear_channel_program\") }}\n              </span>\n            </template>\n          </BaseNotFound>\n        </div>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<style scoped>\n/* Slide Right Animation (going to next day) */\n.slide-right-enter-active,\n.slide-right-leave-active {\n  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;\n}\n\n.slide-right-enter-from {\n  transform: translateX(100%);\n  opacity: 0;\n}\n\n.slide-right-leave-to {\n  transform: translateX(-100%);\n  opacity: 0;\n}\n\n/* Slide Left Animation (going to previous day) */\n.slide-left-enter-active,\n.slide-left-leave-active {\n  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;\n}\n\n.slide-left-enter-from {\n  transform: translateX(-100%);\n  opacity: 0;\n}\n\n.slide-left-leave-to {\n  transform: translateX(100%);\n  opacity: 0;\n}\n\n/* Ensure smooth transitions */\n.transition-content {\n  width: 100%;\n}\n</style>\n","<script setup lang=\"ts\">\nimport type { ComponentPublicInstance } from \"vue\";\nimport formatDate from \"~/utils/format-date\";\n\nexport interface ChannelProgramItemProps {\n  linearProgramItem: Record<string, EpgItem[]>;\n}\nconst props = defineProps<ChannelProgramItemProps>();\n\nconst { locale } = useI18n();\nconst containerRef = ref<HTMLElement>();\nconst dateRefs = ref<Record<string, HTMLElement>>({});\n\n// Get today's date in the same format as the program keys\nconst getTodayKey = () => {\n  const today = new Date();\n  return formatDate(today, \"LLLL d, cccc\", locale.value as TAvailableLocale);\n};\n\n// Scroll to today's date section if it exists\nconst scrollToToday = () => {\n  const todayKey = getTodayKey();\n  const todayElement = dateRefs.value[todayKey];\n\n  if (todayElement && containerRef.value) {\n    // Calculate the scroll position within the container only\n    const containerRect = containerRef.value.getBoundingClientRect();\n    const elementRect = todayElement.getBoundingClientRect();\n    const scrollTop = elementRect.top - containerRect.top + containerRef.value.scrollTop;\n\n    // Scroll only within the container, not the entire page\n    containerRef.value.scrollTo({\n      top: scrollTop,\n      behavior: \"smooth\",\n    });\n  }\n};\n\n// Set ref for date sections\nconst setDateRef = (key: string) => (el: Element | ComponentPublicInstance | null) => {\n  if (el && \"scrollIntoView\" in el) {\n    dateRefs.value[key] = el as HTMLElement;\n  }\n};\n\n// Watch for changes in program data and scroll to today when available\nwatch(() => props.linearProgramItem, (newPrograms) => {\n  if (newPrograms && Object.keys(newPrograms).length > 0) {\n    nextTick(() => {\n      scrollToToday();\n    });\n  }\n}, { immediate: true });\n\nonMounted(() => {\n  // Also try to scroll on mount in case data is already available\n  if (Object.keys(props.linearProgramItem).length > 0) {\n    nextTick(() => {\n      scrollToToday();\n    });\n  }\n});\n</script>\n\n<template>\n  <div ref=\"containerRef\" class=\"background-main rounded px-4 pb-4 w-full overflow-auto\">\n    <div v-for=\"(data, key) in props.linearProgramItem\" :key=\"key\">\n      <p\n        :ref=\"setDateRef(key as string)\"\n        class=\"text-secondary text-base font-medium mb-4 mt-4 sticky top-0 bg-[var(--base-card-bgColor)] py-2 z-10\"\n        :class=\"{ 'text-primary font-bold': key === getTodayKey() }\"\n      >\n        {{ key }}\n        <span v-if=\"key === getTodayKey()\" />\n      </p>\n      <div v-for=\"(item, index) in data\" :key=\"index\">\n        <div class=\"w-full flex min-h-[75px] pb-2\">\n          <div\n            class=\"flex w-1/4 bg-[var(--base-favorite-club-chip-bgColor)] ltr:rounded-l rtl:rounded-r pt-4 px-4 justify-center text-main font-bold text-lg\"\n          >\n            {{ item.dateTime }}\n          </div>\n          <div class=\"flex w-3/4 bg-[var(--base-countdown-bgColor)] ltr:rounded-r rtl:rounded-l text-main flex-col p-4 gap-2\">\n            <div class=\"text-sm font-medium\">\n              {{ item.title }}\n            </div>\n            <div class=\"text-secondary text-xs\">\n              {{ item.type }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","import formatDate from \"./format-date\";\n\n/**\n * Groups an array of linear programs by date, formatting the date and organizing the data accordingly.\n *\n * @param {EpgItem[]} data - Array of linear program objects containing dateTime, title, and type.\n * @param {TAvailableLocale} [locale] - The locale used for date formatting. Defaults to 'en'.\n * @returns {Record<string, EpgItem[]>} An object where keys are formatted dates and values are arrays of linear programs.\n */\nexport const groupLinearProgramByDate = (data: EpgItem[], locale: TAvailableLocale = \"en\") => {\n  return data.reduce((groupedData: Record<string, EpgItem[]>, item: EpgItem) => {\n    const dateTime = new Date(item.dateTime);\n    const formattedDate = formatDate(dateTime, \"LLLL d, cccc\", locale);\n\n    groupedData[formattedDate] = groupedData[formattedDate] || [];\n    groupedData[formattedDate].push({\n      dateTime: formatDate(dateTime, \"p\", locale),\n      title: item.title,\n      type: item.type,\n    });\n\n    return groupedData;\n  }, {});\n};\n\n/**\n * Groups linear programs by day, returning structured data with date info and programs.\n *\n * @param {EpgItem[]} data - Array of linear program objects containing dateTime, title, and type.\n * @param {TAvailableLocale} [locale] - The locale used for date formatting. Defaults to 'en'.\n * @returns {Array} Array of objects with date info and grouped programs.\n */\nexport const groupLinearProgramByDay = (data: EpgItem[], locale: TAvailableLocale = \"en\") => {\n  const groupedByDate = new Map<string, { date: Date; programs: Array<EpgItem & { originalDateTime: Date }> }>();\n\n  data.forEach((item) => {\n    const dateTime = new Date(item.dateTime);\n\n    // Validate the date\n    if (Number.isNaN(dateTime.getTime())) {\n      console.warn(\"Invalid date found:\", item.dateTime);\n      return;\n    }\n\n    // Create a date key for grouping (YYYY-MM-DD)\n    const dateKey = formatDate(dateTime, \"yyyy-MM-dd\", locale);\n\n    if (!groupedByDate.has(dateKey)) {\n      groupedByDate.set(dateKey, {\n        date: dateTime,\n        programs: [],\n      });\n    }\n\n    groupedByDate.get(dateKey)!.programs.push({\n      dateTime: formatDate(dateTime, \"p\", locale), // Format time only\n      title: item.title,\n      type: item.type,\n      originalDateTime: dateTime, // Keep original date for sorting\n    });\n  });\n\n  // Convert Map to array and sort by date\n  return Array.from(groupedByDate.entries())\n    .sort(([dateKeyA], [dateKeyB]) => dateKeyA.localeCompare(dateKeyB))\n    .map(([dateKey, { date, programs }]) => ({\n      dateKey,\n      date,\n      programs: programs\n        .sort((a, b) => a.originalDateTime.getTime() - b.originalDateTime.getTime()) // Sort by time\n        .map(({ originalDateTime: _originalDateTime, ...program }) => program), // Remove originalDateTime from final result\n    }));\n};\n","<script setup lang=\"ts\">\nimport { groupLinearProgramByDate } from \"~/utils/linear-program\";\n\ninterface Props {\n  event: IModelEvent;\n  programs: EpgItem[] | null;\n}\n\nconst props = defineProps<Props>();\n\nconst { locale } = useI18n();\n\nconst formattedPrograms = computed(() => {\n  if (!props.programs || !props.programs.length)\n    return null;\n\n  return groupLinearProgramByDate(props.programs, locale.value as TAvailableLocale);\n});\n</script>\n\n<template>\n  <div class=\"flex flex-col lg:mb-10 lg:flex-row gap-6\" :class=\"{ 'justify-center': !formattedPrograms }\">\n    <!-- Video Player Section -->\n    <div class=\"w-full rounded overflow-hidden\" :class=\"[formattedPrograms ? 'lg:w-2/3' : 'lg:w-4/5 xl:w-2/3']\">\n      <EventBlockVideo :event=\"event\" />\n      <div class=\"flex rounded-b w-full flex-col background-main py-6 px-4\">\n        <div class=\"flex justify-between items-center\">\n          <div class=\"text-[var(--base-tab-text-color)] font-medium truncate\">\n            {{ event?.title }}\n          </div>\n          <EventInfoShare :event=\"event\" />\n        </div>\n\n        <EventInfoDescription v-if=\"event?.eventDescription\" :description=\"event.eventDescription\" />\n      </div>\n    </div>\n\n    <!-- Channel Program Section -->\n    <EventChannelProgram v-if=\"formattedPrograms\" class=\"lg:w-1/3 aspect-[1]\" :linear-program-item=\"formattedPrograms\" />\n  </div>\n</template>\n","/**\n * @fileoverview Enhanced Channel Program Composable\n *\n * This composable provides flexible EPG (Electronic Program Guide) data transformation\n * with support for multiple time intervals (day, week, month, quarter, year).\n *\n * @example Basic usage:\n * ```typescript\n * const { transformChannelProgramToIntervals } = useChannelProgram();\n *\n * // Group by day (default)\n * const dayPrograms = transformChannelProgramToIntervals(epgData, \"day\");\n *\n * // Group by week\n * const weekPrograms = transformChannelProgramToIntervals(epgData, \"week\");\n *\n * // Group by month\n * const monthPrograms = transformChannelProgramToIntervals(epgData, \"month\");\n *\n * ```\n *\n * @example Advanced usage with reactive intervals:\n * ```typescript\n * const { transformChannelProgramToIntervals, IntervalType } = useChannelProgram();\n *\n * const selectedInterval = ref<IntervalType>(\"week\");\n *\n * const programs = computed(() =>\n *   transformChannelProgramToIntervals(epgData.value, selectedInterval.value)\n * );\n *\n * // Change interval dynamically\n * selectedInterval.value = \"month\";\n * ```\n *\n * @example Return data structure:\n * ```typescript\n * interface ChannelProgramInterval {\n *   id: number;                    // Sequential interval ID\n *   label: string;                 // Short display label (e.g., \"Monday 15/01\", \"Week 3\")\n *   fullDate: string;              // Full date description (e.g., \"January 15, Monday\", \"Week 3, 2024\")\n *   date: string;                  // ISO date key (yyyy-MM-dd)\n *   startDate: Date;               // Interval start date\n *   endDate: Date;                 // Interval end date\n *   intervalType: IntervalType;    // The interval type used\n *   programs: Array<{\n *     time: string;                // Formatted time (e.g., \"2:30 PM\")\n *     title: string;               // Program title\n *     description: string;         // Program description\n *     originalDate: Date;          // Original program date/time\n *   }>;\n * }\n * ```\n */\n\nimport formatDate from \"~/utils/format-date\";\n\n// Define supported interval types\nexport type IntervalType = \"day\" | \"week\" | \"month\";\n\nexport interface ChannelProgramInterval {\n  id: number;\n  label: string;\n  fullDate: string;\n  date: string;\n  startDate: Date;\n  endDate: Date;\n  intervalType: IntervalType;\n  programs: {\n    time: string;\n    title: string;\n    description: string;\n    originalDate: Date;\n  }[];\n}\n\nexport const useChannelProgram = () => {\n  const { locale } = useI18n();\n\n  /**\n   * Generate interval ranges based on the specified interval type\n   */\n  const generateIntervalRange = (\n    startDate: Date,\n    endDate: Date,\n    intervalType: IntervalType,\n  ): { start: Date; end: Date }[] => {\n    const intervals: { start: Date; end: Date }[] = [];\n    const currentDate = new Date(startDate);\n\n    // Normalize to start of interval\n    const normalizedStart = new Date(currentDate);\n    switch (intervalType) {\n      case \"day\":\n        normalizedStart.setHours(0, 0, 0, 0);\n        break;\n      case \"week\": {\n        // Start of week (Monday)\n        const dayOfWeek = normalizedStart.getDay();\n        const diff = dayOfWeek === 0 ? -6 : 1 - dayOfWeek;\n        normalizedStart.setDate(normalizedStart.getDate() + diff);\n        normalizedStart.setHours(0, 0, 0, 0);\n        break;\n      }\n      case \"month\":\n        normalizedStart.setDate(1);\n        normalizedStart.setHours(0, 0, 0, 0);\n        break;\n    }\n\n    const current = new Date(normalizedStart);\n    const endTime = endDate.getTime();\n\n    while (current.getTime() <= endTime) {\n      const intervalStart = new Date(current);\n      const intervalEnd = new Date(current);\n\n      // Calculate interval end\n      switch (intervalType) {\n        case \"day\":\n          intervalEnd.setDate(intervalEnd.getDate() + 1);\n          break;\n        case \"week\":\n          intervalEnd.setDate(intervalEnd.getDate() + 7);\n          break;\n        case \"month\":\n          intervalEnd.setMonth(intervalEnd.getMonth() + 1);\n          break;\n      }\n\n      intervalEnd.setTime(intervalEnd.getTime() - 1); // End at last millisecond of interval\n\n      intervals.push({ start: intervalStart, end: intervalEnd });\n\n      // Move to next interval\n      current.setTime(intervalEnd.getTime() + 1);\n    }\n\n    return intervals;\n  };\n\n  /**\n   * Group EPG data by specified interval\n   */\n  const groupEpgByInterval = (\n    epgData: EpgItem[],\n    intervalType: IntervalType,\n  ): Map<string, { start: Date; end: Date; programs: Array<EpgItem & { originalDate: Date }> }> => {\n    const grouped = new Map();\n\n    epgData.forEach((item) => {\n      const dateTime = new Date(item.dateTime);\n\n      if (Number.isNaN(dateTime.getTime())) {\n        console.warn(\"Invalid date found:\", item.dateTime);\n        return;\n      }\n\n      // Find the interval this date belongs to\n      const intervalStart = new Date(dateTime);\n      switch (intervalType) {\n        case \"day\":\n          intervalStart.setHours(0, 0, 0, 0);\n          break;\n        case \"week\": {\n          const dayOfWeek = intervalStart.getDay();\n          const diff = dayOfWeek === 0 ? -6 : 1 - dayOfWeek;\n          intervalStart.setDate(intervalStart.getDate() + diff);\n          intervalStart.setHours(0, 0, 0, 0);\n          break;\n        }\n        case \"month\":\n          intervalStart.setDate(1);\n          intervalStart.setHours(0, 0, 0, 0);\n          break;\n      }\n\n      const intervalEnd = new Date(intervalStart);\n      switch (intervalType) {\n        case \"day\":\n          intervalEnd.setDate(intervalEnd.getDate() + 1);\n          break;\n        case \"week\":\n          intervalEnd.setDate(intervalEnd.getDate() + 7);\n          break;\n        case \"month\":\n          intervalEnd.setMonth(intervalEnd.getMonth() + 1);\n          break;\n      }\n      intervalEnd.setTime(intervalEnd.getTime() - 1);\n\n      const intervalKey = formatDate(intervalStart, \"yyyy-MM-dd\", locale.value as TAvailableLocale);\n\n      if (!grouped.has(intervalKey)) {\n        grouped.set(intervalKey, {\n          start: intervalStart,\n          end: intervalEnd,\n          programs: [],\n        });\n      }\n\n      grouped.get(intervalKey)!.programs.push({\n        dateTime: formatDate(dateTime, \"p\", locale.value as TAvailableLocale),\n        title: item.title,\n        type: item.type,\n        originalDate: dateTime,\n      });\n    });\n\n    return grouped;\n  };\n\n  /**\n   * Get appropriate format strings for different intervals\n   */\n  const getIntervalFormats = (intervalType: IntervalType) => {\n    switch (intervalType) {\n      case \"day\":\n        return {\n          labelFormat: \"EE dd/MM\",\n          fullDateFormat: \"LLLL d, cccc\",\n        };\n      case \"week\":\n        return {\n          labelFormat: \"'Week' w\", // Will be overridden in the main function\n          fullDateFormat: \"'Week' w, yyyy\", // Will be overridden in the main function\n        };\n      case \"month\":\n        return {\n          labelFormat: \"MMMM yyyy\",\n          fullDateFormat: \"LLLL yyyy\",\n        };\n      default:\n        return {\n          labelFormat: \"EEEE dd/MM\",\n          fullDateFormat: \"LLLL d, cccc\",\n        };\n    }\n  };\n\n  /**\n   * Create custom week label in format \"Sep 12 - Sep 19\"\n   */\n  const createWeekLabel = (startDate: Date, endDate: Date, locale: TAvailableLocale): { short: string; full: string } => {\n    try {\n      const actualEndDate = new Date(endDate);\n      actualEndDate.setDate(actualEndDate.getDate() - 1); // Adjust end date to last day of week\n\n      const startMonth = formatDate(startDate, \"MMM\", locale);\n      const endMonth = formatDate(actualEndDate, \"MMM\", locale);\n      const startDay = formatDate(startDate, \"d\", locale);\n      const endDay = formatDate(actualEndDate, \"d\", locale);\n      const year = formatDate(startDate, \"yyyy\", locale);\n\n      // If same month: \"Sep 12 - 19\"\n      if (startMonth === endMonth) {\n        return {\n          short: `${startMonth} ${startDay} - ${endDay}`,\n          full: `${startMonth} ${startDay} - ${endDay}, ${year}`,\n        };\n      }\n      // If different months: \"Sep 30 - Oct 6\"\n      else {\n        return {\n          short: `${startMonth} ${startDay} - ${endMonth} ${endDay}`,\n          full: `${startMonth} ${startDay} - ${endMonth} ${endDay}, ${year}`,\n        };\n      }\n    }\n    catch (error) {\n      console.warn(\"Error creating week label:\", error);\n      return {\n        short: \"Week\",\n        full: \"Week\",\n      };\n    }\n  };\n\n  /**\n   * Transform EPG data to match UI structure with dynamic intervals\n   */\n  const transformChannelProgramToIntervals = (\n    epgData: EpgItem[],\n    intervalType: IntervalType = \"day\",\n  ): ChannelProgramInterval[] => {\n    if (!epgData?.length) {\n      console.warn(\"No EPG data provided to transformChannelProgramToIntervals\");\n      return [];\n    }\n\n    try {\n      const groupedPrograms = groupEpgByInterval(epgData, intervalType);\n\n      if (!groupedPrograms.size) {\n        console.warn(\"No programs were grouped by interval\");\n        return [];\n      }\n\n      // Find the date range from EPG data\n      const dates = epgData\n        .map(item => new Date(item.dateTime))\n        .filter(date => !Number.isNaN(date.getTime()))\n        .sort((a, b) => a.getTime() - b.getTime());\n\n      if (!dates.length) {\n        console.warn(\"No valid dates found in EPG data\");\n        return [];\n      }\n\n      const startDate = dates[0];\n      const endDate = dates[dates.length - 1];\n\n      // Generate all intervals in the range\n      const intervals = generateIntervalRange(startDate, endDate, intervalType);\n      const formats = getIntervalFormats(intervalType);\n\n      return intervals.map((interval, index) => {\n        const intervalKey = formatDate(interval.start, \"yyyy-MM-dd\", locale.value as TAvailableLocale);\n        const intervalData = groupedPrograms.get(intervalKey);\n\n        try {\n          let shortLabel: string;\n          let fullDateLabel: string;\n\n          // Special handling for week intervals\n          if (intervalType === \"week\") {\n            const weekLabels = createWeekLabel(interval.start, interval.end, locale.value as TAvailableLocale);\n            shortLabel = weekLabels.short;\n            fullDateLabel = weekLabels.full;\n          }\n          else {\n            // Use standard format for other intervals\n            shortLabel = formatDate(interval.start, formats.labelFormat, locale.value as TAvailableLocale) || `${intervalType} ${index + 1}`;\n            fullDateLabel = formatDate(interval.start, formats.fullDateFormat, locale.value as TAvailableLocale) || shortLabel;\n          }\n\n          return {\n            id: index + 1,\n            label: shortLabel,\n            fullDate: fullDateLabel,\n            date: intervalKey,\n            startDate: interval.start,\n            endDate: interval.end,\n            intervalType,\n            programs: intervalData\n              ? intervalData.programs\n                  .sort((a, b) => a.originalDate.getTime() - b.originalDate.getTime())\n                  .map(program => ({\n                    time: program.dateTime || \"N/A\",\n                    title: program.title || \"Untitled Program\",\n                    description: program.type || \"No description\",\n                    originalDate: program.originalDate,\n                  }))\n              : [],\n          };\n        }\n        catch (formatError) {\n          console.warn(`Error formatting ${intervalType} ${index + 1}:`, formatError);\n          return {\n            id: index + 1,\n            label: `${intervalType} ${index + 1}`,\n            fullDate: `${intervalType} ${index + 1}`,\n            date: intervalKey || `fallback-${index}`,\n            startDate: interval.start,\n            endDate: interval.end,\n            intervalType,\n            programs: [],\n          };\n        }\n      });\n    }\n    catch (error) {\n      console.error(\"Error transforming channel program data:\", error);\n      return [];\n    }\n  };\n\n  return {\n    transformChannelProgramToIntervals,\n  };\n};\n","import type { ChannelProgramInterval } from \"./use-channel-program\";\nimport { nextTick } from \"vue\";\n\nexport const useDayNavigation = (allDays: Ref<ChannelProgramInterval[]>) => {\n  const currentDayIndex = ref(0);\n  const maxVisibleDays = ref(6);\n  const activeDayId = ref(1);\n  const previousDayId = ref(1);\n  const slideDirection = ref<\"left\" | \"right\">(\"right\");\n\n  const activeIndex = computed(() => {\n    return allDays.value.findIndex(day => day.id === activeDayId.value);\n  });\n\n  const visibleDays = computed(() => {\n    const startIndex = currentDayIndex.value;\n    const endIndex = Math.min(startIndex + maxVisibleDays.value, allDays.value.length);\n    return allDays.value.slice(startIndex, endIndex);\n  });\n\n  const canNavigatePrev = computed(() => {\n    return activeIndex.value > 0;\n  });\n\n  const canNavigateNext = computed(() => {\n    return activeIndex.value < allDays.value.length - 1;\n  });\n\n  const adjustVisibleWindow = () => {\n    const currentActiveIndex = activeIndex.value;\n    if (currentActiveIndex === -1)\n      return;\n\n    const windowStart = currentDayIndex.value;\n    const windowEnd = windowStart + maxVisibleDays.value - 1;\n\n    if (currentActiveIndex < windowStart) {\n      currentDayIndex.value = currentActiveIndex;\n    }\n    else if (currentActiveIndex > windowEnd) {\n      currentDayIndex.value = Math.max(0, currentActiveIndex - maxVisibleDays.value + 1);\n    }\n  };\n\n  const navigatePrev = () => {\n    if (canNavigatePrev.value) {\n      const currentActiveIndex = activeIndex.value;\n      const prevDay = allDays.value[currentActiveIndex - 1];\n\n      if (prevDay) {\n        slideDirection.value = \"left\";\n        previousDayId.value = activeDayId.value;\n        activeDayId.value = prevDay.id;\n\n        nextTick(() => {\n          adjustVisibleWindow();\n        });\n      }\n    }\n  };\n\n  const navigateNext = () => {\n    if (canNavigateNext.value) {\n      const currentActiveIndex = activeIndex.value;\n      const nextDay = allDays.value[currentActiveIndex + 1];\n\n      if (nextDay) {\n        slideDirection.value = \"right\";\n        previousDayId.value = activeDayId.value;\n        activeDayId.value = nextDay.id;\n\n        nextTick(() => {\n          adjustVisibleWindow();\n        });\n      }\n    }\n  };\n\n  const selectDay = (dayId: number) => {\n    const currentActiveIndex = activeIndex.value;\n    const newDayIndex = allDays.value.findIndex(d => d.id === dayId);\n\n    if (newDayIndex > currentActiveIndex) {\n      slideDirection.value = \"right\";\n    }\n    else if (newDayIndex < currentActiveIndex) {\n      slideDirection.value = \"left\";\n    }\n\n    previousDayId.value = activeDayId.value;\n    activeDayId.value = dayId;\n  };\n\n  const updateMaxVisibleDays = () => {\n    const width = window.innerWidth;\n\n    if (width < 640) {\n      maxVisibleDays.value = 2;\n    }\n    else if (width < 768) {\n      maxVisibleDays.value = 3;\n    }\n    else if (width < 1024) {\n      maxVisibleDays.value = 4;\n    }\n    else {\n      maxVisibleDays.value = 5;\n    }\n\n    adjustVisibleWindow();\n  };\n\n  const showNavigation = computed(() => allDays.value.length > maxVisibleDays.value);\n\n  const currentDayPrograms = computed(() => {\n    const currentDay = allDays.value.find(day => day.id === activeDayId.value);\n    return currentDay?.programs || [];\n  });\n\n  const tabsForUTabs = computed(() => {\n    return visibleDays.value.map(day => ({\n      key: day.id.toString(),\n      label: day.label,\n      onClick: () => selectDay(day.id),\n    }));\n  });\n\n  const setTodayAsActive = () => {\n    const now = new Date();\n    const todayString = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, \"0\")}-${String(now.getDate()).padStart(2, \"0\")}`;\n\n    const todayDay = allDays.value.find(day => day.date === todayString);\n\n    if (todayDay) {\n      // Set today as active\n      activeDayId.value = todayDay.id;\n      previousDayId.value = todayDay.id;\n\n      // Adjust visible window to show today\n      nextTick(() => {\n        adjustVisibleWindow();\n      });\n    }\n  };\n\n  // Get current day info\n  const currentDay = computed(() => {\n    return allDays.value.find(day => day.id === activeDayId.value);\n  });\n\n  return {\n    // State\n    activeDayId: readonly(activeDayId),\n    previousDayId: readonly(previousDayId),\n    slideDirection: readonly(slideDirection),\n\n    // Computed\n    visibleDays,\n    canNavigatePrev,\n    canNavigateNext,\n    showNavigation,\n    currentDayPrograms,\n    tabsForUTabs,\n    currentDay,\n\n    // Methods\n    navigatePrev,\n    navigateNext,\n    selectDay,\n    updateMaxVisibleDays,\n    setTodayAsActive,\n  };\n};\n","<!-- eslint-disable max-len -->\n<script setup lang=\"ts\">\nimport { useSwipe } from \"@vueuse/core\";\nimport { useChannelProgram } from \"~/composables/use-channel-program\";\nimport { useDayNavigation } from \"~/composables/use-day-navigation\";\nimport useEventStore from \"~/stores/event\";\n\nconst route = useRoute();\nconst eventStore = useEventStore();\nconst event = computed(() => eventStore.data);\nconst loading = computed(() => eventStore.loading);\nconst channelProgram = computed(() => eventStore.channelProgram);\n\nconst nationalProgram = computed(() => !event.value?.source?.hd);\n\nconst title = computed(() => {\n  if (nationalProgram.value) {\n    return \"TV Program\";\n  }\n  return event.value?.title || \"Direto\";\n});\n\nconst { transformChannelProgramToIntervals } = useChannelProgram();\n\n// Extract EPG data from the linear program\nconst epgData = computed(() => {\n  const program = channelProgram.value;\n  if (!program)\n    return [];\n\n  if (nationalProgram.value) {\n    return program.epg?.length ? program.epg : program.epgs?.[0]?.items || [];\n  }\n\n  // Return epg array or first epgs item's items array\n  return program.epg?.length ? program.epg : program.epgs?.[1]?.items || [];\n});\n\nconst allDays = computed(() => {\n  return transformChannelProgramToIntervals(epgData.value, \"day\");\n});\n\nconst {\n  activeDayId,\n  slideDirection,\n  canNavigatePrev,\n  canNavigateNext,\n  showNavigation,\n  currentDayPrograms,\n  tabsForUTabs,\n  currentDay,\n  navigatePrev,\n  navigateNext,\n  updateMaxVisibleDays,\n  setTodayAsActive,\n} = useDayNavigation(allDays);\n\nconst swipeContainer = ref<HTMLElement>();\nuseSwipe(swipeContainer, {\n  threshold: 10,\n  onSwipeEnd: (_e: TouchEvent, direction: string) => {\n    if (direction.toLowerCase() === \"left\") {\n      navigateNext();\n    }\n    else if (direction.toLowerCase() === \"right\") {\n      navigatePrev();\n    }\n  },\n});\n\nonMounted(() => {\n  updateMaxVisibleDays();\n  window.addEventListener(\"resize\", updateMaxVisibleDays);\n});\n\nonUnmounted(() => {\n  window.removeEventListener(\"resize\", updateMaxVisibleDays);\n});\n\nwatch(allDays, (newDays) => {\n  if (newDays.length > 0) {\n    setTodayAsActive();\n  }\n}, { immediate: true });\n\nwatch(() => route.params.eventId, (eventId) => {\n  eventStore.reset();\n  eventId && eventStore.load(eventId as string);\n}, { immediate: true });\n\nuseHead({ title: computed(() => title.value) });\ndefinePageMeta({ layout: \"home\" });\n</script>\n\n<template>\n  <div class=\"main-container\">\n    <div v-if=\"loading\" class=\"flex flex-col lg:flex-row mb-10 lg:gap-6\">\n      <div class=\"skeletonLoading aspect-video lg:w-2/3\" />\n      <div class=\"skeletonLoading lg:w-1/3\" />\n    </div>\n\n    <div v-else-if=\"nationalProgram\" class=\"max-w-screen-2xl mx-auto\">\n      <div ref=\"swipeContainer\" class=\"flex flex-col gap-10\">\n        <h1 class=\"text-main text-3xl font-bold\">\n          {{ title }}\n        </h1>\n\n        <div class=\"background-main min-h-[calc(100vh-350px)] rounded sm:px-6 py-4\">\n          <ChannelDayNavigation\n            :tabs=\"tabsForUTabs\"\n            :active-tab=\"activeDayId.toString()\"\n            :can-navigate-prev=\"canNavigatePrev\"\n            :can-navigate-next=\"canNavigateNext\"\n            :show-navigation=\"showNavigation\"\n            @navigate-prev=\"navigatePrev\"\n            @navigate-next=\"navigateNext\"\n          />\n\n          <ChannelProgramList\n            :programs=\"currentDayPrograms\"\n            :slide-direction=\"slideDirection\"\n            :day-key=\"activeDayId\"\n            :full-date=\"currentDay?.fullDate\"\n          />\n        </div>\n      </div>\n    </div>\n    <EventPlayerWithProgram\n      v-else-if=\"event\"\n      :event=\"event\"\n      :programs=\"epgData\"\n    />\n  </div>\n</template>\n\n<style>\n.homeLayout__content {\n  @apply !min-h-[calc(100vh-500px)] sm:!min-h-[calc(100vh-305px)]\n}\n\n.baseFooter {\n  @apply min-h-[500px] sm:min-h-[unset]\n}\n</style>\n"],"names":["props","__props","emit","__emit","locale","useI18n","isRTL","computed","handleKeydown","event","action","_openBlock","_createElementBlock","_hoisted_1","showNavigation","_createBlock","_component_BaseButton","_normalizeClass","canNavigatePrev","_unref","$emit","_cache","$event","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_UTabs","tabs","activeTab","canNavigateNext","_hoisted_5","_hoisted_6","_hoisted_7","t","color","useColorMode","isDarkTheme","THEME_COLOR","_toDisplayString","_Transition","_Fragment","_renderList","program","_createElementVNode","_hoisted_8","_hoisted_9","_component_BaseNotFound","_component_IconNoBroadcast","_hoisted_10","containerRef","ref","dateRefs","getTodayKey","formatDate","scrollToToday","todayKey","todayElement","containerRect","scrollTop","setDateRef","key","el","watch","newPrograms","nextTick","onMounted","data","_createTextVNode","item","index","groupLinearProgramByDate","groupedData","dateTime","formattedDate","formattedPrograms","_component_EventBlockVideo","_component_EventInfoShare","_component_EventInfoDescription","_component_EventChannelProgram","useChannelProgram","generateIntervalRange","startDate","endDate","intervalType","intervals","currentDate","normalizedStart","dayOfWeek","diff","current","endTime","intervalStart","intervalEnd","groupEpgByInterval","epgData","grouped","intervalKey","getIntervalFormats","createWeekLabel","actualEndDate","startMonth","endMonth","startDay","endDay","year","error","groupedPrograms","dates","date","a","b","formats","interval","intervalData","shortLabel","fullDateLabel","weekLabels","formatError","useDayNavigation","allDays","currentDayIndex","maxVisibleDays","activeDayId","previousDayId","slideDirection","activeIndex","day","visibleDays","startIndex","endIndex","adjustVisibleWindow","currentActiveIndex","windowStart","windowEnd","navigatePrev","prevDay","navigateNext","nextDay","selectDay","dayId","newDayIndex","d","updateMaxVisibleDays","width","currentDayPrograms","tabsForUTabs","setTodayAsActive","now","todayString","todayDay","currentDay","readonly","route","useRoute","eventStore","useEventStore","loading","channelProgram","nationalProgram","title","transformChannelProgramToIntervals","swipeContainer","useSwipe","_e","direction","onUnmounted","newDays","eventId","useHead","_component_ChannelDayNavigation","_component_ChannelProgramList","_component_EventPlayerWithProgram"],"mappings":"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"}